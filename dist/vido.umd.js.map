{"version":3,"file":"vido.umd.js","sources":["../node_modules/lit-html-optimised/lib/directive.js","../node_modules/lit-html-optimised/lib/dom.js","../node_modules/lit-html-optimised/lib/part.js","../node_modules/lit-html-optimised/lib/template.js","../node_modules/lit-html-optimised/lib/template-instance.js","../node_modules/lit-html-optimised/lib/template-result.js","../node_modules/lit-html-optimised/lib/parts.js","../node_modules/lit-html-optimised/lib/default-template-processor.js","../node_modules/lit-html-optimised/lib/template-factory.js","../node_modules/lit-html-optimised/lib/render.js","../node_modules/lit-html-optimised/lit-html.js","../node_modules/lit-html-optimised/directives/async-append.js","../node_modules/lit-html-optimised/directives/async-replace.js","../node_modules/lit-html-optimised/directives/cache.js","../node_modules/lit-html-optimised/directives/class-map.js","../node_modules/lit-html-optimised/directives/guard.js","../node_modules/lit-html-optimised/directives/if-defined.js","../node_modules/lit-html-optimised/directives/repeat.js","../node_modules/lit-html-optimised/directives/unsafe-html.js","../node_modules/lit-html-optimised/directives/until.js","../node_modules/lit-html-optimised/directives/live.js","../src/Detach.ts","../src/StyleMap.ts","../src/Action.ts","../src/PointerAction.ts","../src/PublicComponentMethods.ts","../src/ActionsCollector.ts","../src/InternalComponentMethods.ts","../src/helpers.ts","../src/Slots.ts","../src/GetElement.ts","../src/vido.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    // tslint:disable-next-line:no-any\n    d.isDirective = true;\n    return d;\n});\nexport class Directive {\n    constructor() {\n        this.isDirective = true;\n        this.isClass = true;\n    }\n    body(_part) {\n        // body of the directive\n    }\n}\nexport const isDirective = (o) => {\n    return (o !== undefined && o !== null &&\n        // tslint:disable-next-line:no-any\n        typeof o.isDirective === 'boolean');\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n/**\n * Used to clone existing node instead of each time creating new one which is\n * slower\n */\nconst markerNode = document.createComment('');\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => markerNode.cloneNode();\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker, } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * Used to clone existing node instead of each time creating new one which is\n * slower\n */\nconst emptyTemplateNode = document.createElement('template');\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = emptyTemplateNode.cloneNode();\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return (Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]));\n};\n/**\n * Used to clone text node instead of each time creating new one which is slower\n */\nconst emptyTextNode = document.createTextNode('');\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            // tslint:disable-next-line: no-any\n            if (directive.isClass) {\n                // tslint:disable-next-line: no-any\n                directive.body(this);\n            }\n            else {\n                directive(this);\n            }\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert((this.startNode = createMarker()));\n        part.__insert((this.endNode = createMarker()));\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert((this.startNode = createMarker()));\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            // tslint:disable-next-line: no-any\n            if (directive.isClass) {\n                // tslint:disable-next-line: no-any\n                directive.body(this);\n            }\n            else {\n                directive(this);\n            }\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            const textNode = emptyTextNode.cloneNode();\n            textNode.textContent = valueAsString;\n            this.__commitNode(textNode);\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            // tslint:disable-next-line: no-any\n            if (directive.isClass) {\n                // tslint:disable-next-line: no-any\n                directive.body(this);\n            }\n            else {\n                directive(this);\n            }\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            strings.length === 2 && strings[0] === '' && strings[1] === '';\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            },\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n        // eslint-disable-next-line\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            // tslint:disable-next-line: no-any\n            if (directive.isClass) {\n                // tslint:disable-next-line: no-any\n                directive.body(this);\n            }\n            else {\n                directive(this);\n            }\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            (oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive));\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, Directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { createMarker, directive, NodePart } from '../lit-html.js';\n/**\n * A directive that renders the items of an async iterable[1], appending new\n * values after previous values, similar to the built-in support for iterables.\n *\n * Async iterables are objects with a [Symbol.asyncIterator] method, which\n * returns an iterator who's `next()` method returns a Promise. When a new\n * value is available, the Promise resolves and the value is appended to the\n * Part controlled by the directive. If another value other than this\n * directive has been set on the Part, the iterable will no longer be listened\n * to and new values won't be written to the Part.\n *\n * [1]: https://github.com/tc39/proposal-async-iteration\n *\n * @param value An async iterable\n * @param mapper An optional function that maps from (value, index) to another\n *     value. Useful for generating templates for each item in the iterable.\n */\nexport const asyncAppend = directive((value, mapper) => async (part) => {\n    var e_1, _a;\n    if (!(part instanceof NodePart)) {\n        throw new Error('asyncAppend can only be used in text bindings');\n    }\n    // If we've already set up this particular iterable, we don't need\n    // to do anything.\n    if (value === part.value) {\n        return;\n    }\n    part.value = value;\n    // We keep track of item Parts across iterations, so that we can\n    // share marker nodes between consecutive Parts.\n    let itemPart;\n    let i = 0;\n    try {\n        for (var value_1 = __asyncValues(value), value_1_1; value_1_1 = await value_1.next(), !value_1_1.done;) {\n            let v = value_1_1.value;\n            // Check to make sure that value is the still the current value of\n            // the part, and if not bail because a new value owns this part\n            if (part.value !== value) {\n                break;\n            }\n            // When we get the first value, clear the part. This lets the\n            // previous value display until we can replace it.\n            if (i === 0) {\n                part.clear();\n            }\n            // As a convenience, because functional-programming-style\n            // transforms of iterables and async iterables requires a library,\n            // we accept a mapper function. This is especially convenient for\n            // rendering a template for each item.\n            if (mapper !== undefined) {\n                // This is safe because T must otherwise be treated as unknown by\n                // the rest of the system.\n                v = mapper(v, i);\n            }\n            // Like with sync iterables, each item induces a Part, so we need\n            // to keep track of start and end nodes for the Part.\n            // Note: Because these Parts are not updatable like with a sync\n            // iterable (if we render a new value, we always clear), it may\n            // be possible to optimize away the Parts and just re-use the\n            // Part.setValue() logic.\n            let itemStartNode = part.startNode;\n            // Check to see if we have a previous item and Part\n            if (itemPart !== undefined) {\n                // Create a new node to separate the previous and next Parts\n                itemStartNode = createMarker();\n                // itemPart is currently the Part for the previous item. Set\n                // it's endNode to the node we'll use for the next Part's\n                // startNode.\n                itemPart.endNode = itemStartNode;\n                part.endNode.parentNode.insertBefore(itemStartNode, part.endNode);\n            }\n            itemPart = new NodePart(part.options);\n            itemPart.insertAfterNode(itemStartNode);\n            itemPart.setValue(v);\n            itemPart.commit();\n            i++;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (value_1_1 && !value_1_1.done && (_a = value_1.return)) await _a.call(value_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n});\n//# sourceMappingURL=async-append.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { directive, NodePart } from '../lit-html.js';\n/**\n * A directive that renders the items of an async iterable[1], replacing\n * previous values with new values, so that only one value is ever rendered\n * at a time.\n *\n * Async iterables are objects with a [Symbol.asyncIterator] method, which\n * returns an iterator who's `next()` method returns a Promise. When a new\n * value is available, the Promise resolves and the value is rendered to the\n * Part controlled by the directive. If another value other than this\n * directive has been set on the Part, the iterable will no longer be listened\n * to and new values won't be written to the Part.\n *\n * [1]: https://github.com/tc39/proposal-async-iteration\n *\n * @param value An async iterable\n * @param mapper An optional function that maps from (value, index) to another\n *     value. Useful for generating templates for each item in the iterable.\n */\nexport const asyncReplace = directive((value, mapper) => async (part) => {\n    var e_1, _a;\n    if (!(part instanceof NodePart)) {\n        throw new Error('asyncReplace can only be used in text bindings');\n    }\n    // If we've already set up this particular iterable, we don't need\n    // to do anything.\n    if (value === part.value) {\n        return;\n    }\n    // We nest a new part to keep track of previous item values separately\n    // of the iterable as a value itself.\n    const itemPart = new NodePart(part.options);\n    part.value = value;\n    let i = 0;\n    try {\n        for (var value_1 = __asyncValues(value), value_1_1; value_1_1 = await value_1.next(), !value_1_1.done;) {\n            let v = value_1_1.value;\n            // Check to make sure that value is the still the current value of\n            // the part, and if not bail because a new value owns this part\n            if (part.value !== value) {\n                break;\n            }\n            // When we get the first value, clear the part. This let's the\n            // previous value display until we can replace it.\n            if (i === 0) {\n                part.clear();\n                itemPart.appendIntoPart(part);\n            }\n            // As a convenience, because functional-programming-style\n            // transforms of iterables and async iterables requires a library,\n            // we accept a mapper function. This is especially convenient for\n            // rendering a template for each item.\n            if (mapper !== undefined) {\n                // This is safe because T must otherwise be treated as unknown by\n                // the rest of the system.\n                v = mapper(v, i);\n            }\n            itemPart.setValue(v);\n            itemPart.commit();\n            i++;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (value_1_1 && !value_1_1.done && (_a = value_1.return)) await _a.call(value_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n});\n//# sourceMappingURL=async-replace.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateInstance } from '../lib/template-instance.js';\nimport { directive, NodePart, reparentNodes, TemplateResult } from '../lit-html.js';\nconst templateCaches = new WeakMap();\n/**\n * Enables fast switching between multiple templates by caching the DOM nodes\n * and TemplateInstances produced by the templates.\n *\n * Example:\n *\n * ```\n * let checked = false;\n *\n * html`\n *   ${cache(checked ? html`input is checked` : html`input is not checked`)}\n * `\n * ```\n */\nexport const cache = directive((value) => (part) => {\n    if (!(part instanceof NodePart)) {\n        throw new Error('cache can only be used in text bindings');\n    }\n    let templateCache = templateCaches.get(part);\n    if (templateCache === undefined) {\n        templateCache = new WeakMap();\n        templateCaches.set(part, templateCache);\n    }\n    const previousValue = part.value;\n    // First, can we update the current TemplateInstance, or do we need to move\n    // the current nodes into the cache?\n    if (previousValue instanceof TemplateInstance) {\n        if (value instanceof TemplateResult &&\n            previousValue.template === part.options.templateFactory(value)) {\n            // Same Template, just trigger an update of the TemplateInstance\n            part.setValue(value);\n            return;\n        }\n        else {\n            // Not the same Template, move the nodes from the DOM into the cache.\n            let cachedTemplate = templateCache.get(previousValue.template);\n            if (cachedTemplate === undefined) {\n                cachedTemplate = {\n                    instance: previousValue,\n                    nodes: document.createDocumentFragment(),\n                };\n                templateCache.set(previousValue.template, cachedTemplate);\n            }\n            reparentNodes(cachedTemplate.nodes, part.startNode.nextSibling, part.endNode);\n        }\n    }\n    // Next, can we reuse nodes from the cache?\n    if (value instanceof TemplateResult) {\n        const template = part.options.templateFactory(value);\n        const cachedTemplate = templateCache.get(template);\n        if (cachedTemplate !== undefined) {\n            // Move nodes out of cache\n            part.setValue(cachedTemplate.nodes);\n            part.commit();\n            // Set the Part value to the TemplateInstance so it'll update it.\n            part.value = cachedTemplate.instance;\n        }\n    }\n    part.setValue(value);\n});\n//# sourceMappingURL=cache.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive, PropertyPart } from '../lit-html.js';\n// IE11 doesn't support classList on SVG elements, so we emulate it with a Set\nclass ClassList {\n    constructor(element) {\n        this.classes = new Set();\n        this.changed = false;\n        this.element = element;\n        const classList = (element.getAttribute('class') || '').split(/\\s+/);\n        for (const cls of classList) {\n            this.classes.add(cls);\n        }\n    }\n    add(cls) {\n        this.classes.add(cls);\n        this.changed = true;\n    }\n    remove(cls) {\n        this.classes.delete(cls);\n        this.changed = true;\n    }\n    commit() {\n        if (this.changed) {\n            let classString = '';\n            this.classes.forEach((cls) => classString += cls + ' ');\n            this.element.setAttribute('class', classString);\n        }\n    }\n}\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst previousClassesCache = new WeakMap();\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `class` if the property value is truthy; if the property value is\n * falsey, the property name is removed from the element's `class`. For example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nexport const classMap = directive((classInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'class' || part.committer.parts.length > 1) {\n        throw new Error('The `classMap` directive must be used in the `class` attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { element } = committer;\n    let previousClasses = previousClassesCache.get(part);\n    if (previousClasses === undefined) {\n        // Write static classes once\n        // Use setAttribute() because className isn't a string on SVG elements\n        element.setAttribute('class', committer.strings.join(' '));\n        previousClassesCache.set(part, previousClasses = new Set());\n    }\n    const classList = (element.classList || new ClassList(element));\n    // Remove old classes that no longer apply\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    previousClasses.forEach((name) => {\n        if (!(name in classInfo)) {\n            classList.remove(name);\n            previousClasses.delete(name);\n        }\n    });\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n        const value = classInfo[name];\n        if (value != previousClasses.has(name)) {\n            // We explicitly want a loose truthy check of `value` because it seems\n            // more convenient that '' and 0 are skipped.\n            if (value) {\n                classList.add(name);\n                previousClasses.add(name);\n            }\n            else {\n                classList.remove(name);\n                previousClasses.delete(name);\n            }\n        }\n    }\n    if (typeof classList.commit === 'function') {\n        classList.commit();\n    }\n});\n//# sourceMappingURL=class-map.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { directive } from '../lit-html.js';\nconst previousValues = new WeakMap();\n/**\n * Prevents re-render of a template function until a single value or an array of\n * values changes.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([user.id, company.id], () => html`...`)}\n *   </div>\n * ```\n *\n * In this case, the template only renders if either `user.id` or `company.id`\n * changes.\n *\n * guard() is useful with immutable data patterns, by preventing expensive work\n * until data updates.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n *   </div>\n * ```\n *\n * In this case, items are mapped over only when the array reference changes.\n *\n * @param value the value to check before re-rendering\n * @param f the template function\n */\nexport const guard = directive((value, f) => (part) => {\n    const previousValue = previousValues.get(part);\n    if (Array.isArray(value)) {\n        // Dirty-check arrays by item\n        if (Array.isArray(previousValue) &&\n            previousValue.length === value.length &&\n            value.every((v, i) => v === previousValue[i])) {\n            return;\n        }\n    }\n    else if (previousValue === value &&\n        (value !== undefined || previousValues.has(part))) {\n        // Dirty-check non-arrays by identity\n        return;\n    }\n    part.setValue(f());\n    // Copy the value if it's an array so that if it's mutated we don't forget\n    // what the previous values were.\n    previousValues.set(part, Array.isArray(value) ? Array.from(value) : value);\n});\n//# sourceMappingURL=guard.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive } from '../lit-html.js';\nconst previousValues = new WeakMap();\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = directive((value) => (part) => {\n    const previousValue = previousValues.get(part);\n    if (value === undefined && part instanceof AttributePart) {\n        // If the value is undefined, remove the attribute, but only if the value\n        // was previously defined.\n        if (previousValue !== undefined || !previousValues.has(part)) {\n            const name = part.committer.name;\n            part.committer.element.removeAttribute(name);\n        }\n    }\n    else if (value !== previousValue) {\n        part.setValue(value);\n    }\n    previousValues.set(part, value);\n});\n//# sourceMappingURL=if-defined.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { createMarker, directive, NodePart, removeNodes, reparentNodes } from '../lit-html.js';\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart = (containerPart, beforePart) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = beforePart === undefined ? containerPart.endNode :\n        beforePart.startNode;\n    const startNode = container.insertBefore(createMarker(), beforeNode);\n    container.insertBefore(createMarker(), beforeNode);\n    const newPart = new NodePart(containerPart.options);\n    newPart.insertAfterNode(startNode);\n    return newPart;\n};\nconst updatePart = (part, value) => {\n    part.setValue(value);\n    part.commit();\n    return part;\n};\nconst insertPartBefore = (containerPart, part, ref) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = ref ? ref.startNode : containerPart.endNode;\n    const endNode = part.endNode.nextSibling;\n    if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n    }\n};\nconst removePart = (part) => {\n    removeNodes(part.startNode.parentNode, part.startNode, part.endNode.nextSibling);\n};\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list, start, end) => {\n    const map = new Map();\n    for (let i = start; i <= end; i++) {\n        map.set(list[i], i);\n    }\n    return map;\n};\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap();\nconst keyListCache = new WeakMap();\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive((items, keyFnOrTemplate, template) => {\n    let keyFn;\n    if (template === undefined) {\n        template = keyFnOrTemplate;\n    }\n    else if (keyFnOrTemplate !== undefined) {\n        keyFn = keyFnOrTemplate;\n    }\n    return (containerPart) => {\n        if (!(containerPart instanceof NodePart)) {\n            throw new Error('repeat can only be used in text bindings');\n        }\n        // Old part & key lists are retrieved from the last update\n        // (associated with the part for this instance of the directive)\n        const oldParts = partListCache.get(containerPart) || [];\n        const oldKeys = keyListCache.get(containerPart) || [];\n        // New part list will be built up as we go (either reused from\n        // old parts or created for new keys in this update). This is\n        // saved in the above cache at the end of the update.\n        const newParts = [];\n        // New value list is eagerly generated from items along with a\n        // parallel array indicating its key.\n        const newValues = [];\n        const newKeys = [];\n        let index = 0;\n        for (const item of items) {\n            newKeys[index] = keyFn ? keyFn(item, index) : index;\n            newValues[index] = template(item, index);\n            index++;\n        }\n        // Maps from key to index for current and previous update; these\n        // are generated lazily only when needed as a performance\n        // optimization, since they are only required for multiple\n        // non-contiguous changes in the list, which are less common.\n        let newKeyToIndexMap;\n        let oldKeyToIndexMap;\n        // Head and tail pointers to old parts and new values\n        let oldHead = 0;\n        let oldTail = oldParts.length - 1;\n        let newHead = 0;\n        let newTail = newValues.length - 1;\n        // Overview of O(n) reconciliation algorithm (general approach\n        // based on ideas found in ivi, vue, snabbdom, etc.):\n        //\n        // * We start with the list of old parts and new values (and\n        //   arrays of their respective keys), head/tail pointers into\n        //   each, and we build up the new list of parts by updating\n        //   (and when needed, moving) old parts or creating new ones.\n        //   The initial scenario might look like this (for brevity of\n        //   the diagrams, the numbers in the array reflect keys\n        //   associated with the old parts or new values, although keys\n        //   and parts/values are actually stored in parallel arrays\n        //   indexed using the same head/tail pointers):\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n        //                                      item order\n        //      newHead ^                 ^ newTail\n        //\n        // * Iterate old & new lists from both sides, updating,\n        //   swapping, or removing parts at the head/tail locations\n        //   until neither head nor tail can move.\n        //\n        // * Example below: keys at head pointers match, so update old\n        //   part 0 in-place (no need to move it) and record part 0 in\n        //   the `newParts` list. The last thing we do is advance the\n        //   `oldHead` and `newHead` pointers (will be reflected in the\n        //   next diagram).\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //      newHead ^                 ^ newTail\n        //\n        // * Example below: head pointers don't match, but tail\n        //   pointers do, so update part 6 in place (no need to move\n        //   it), and record part 6 in the `newParts` list. Last,\n        //   advance the `oldTail` and `oldHead` pointers.\n        //\n        //         oldHead v              v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n        //                                      & newTail\n        //         newHead ^              ^ newTail\n        //\n        // * If neither head nor tail match; next check if one of the\n        //   old head/tail items was removed. We first need to generate\n        //   the reverse map of new keys to index (`newKeyToIndexMap`),\n        //   which is done once lazily as a performance optimization,\n        //   since we only hit this case if multiple non-contiguous\n        //   changes were made. Note that for contiguous removal\n        //   anywhere in the list, the head and tails would advance\n        //   from either end and pass each other before we get to this\n        //   case and removals would be handled in the final while loop\n        //   without needing to generate the map.\n        //\n        // * Example below: The key at `oldTail` was removed (no longer\n        //   in the `newKeyToIndexMap`), so remove that part from the\n        //   DOM and advance just the `oldTail` pointer.\n        //\n        //         oldHead v           v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n        //         newHead ^           ^ newTail\n        //\n        // * Once head and tail cannot move, any mismatches are due to\n        //   either new or moved items; if a new key is in the previous\n        //   \"old key to old index\" map, move the old part to the new\n        //   location, otherwise create and insert a new part. Note\n        //   that when moving an old part we null its position in the\n        //   oldParts array if it lies between the head and tail so we\n        //   know to skip it when the pointers get there.\n        //\n        // * Example below: neither head nor tail match, and neither\n        //   were removed; so find the `newHead` key in the\n        //   `oldKeyToIndexMap`, and move that old part's DOM into the\n        //   next head position (before `oldParts[oldHead]`). Last,\n        //   null the part in the `oldPart` array since it was\n        //   somewhere in the remaining oldParts still to be scanned\n        //   (between the head and tail pointers) so that we know to\n        //   skip that old part on future iterations.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n        //                                      newHead\n        //         newHead ^           ^ newTail\n        //\n        // * Note that for moves/insertions like the one above, a part\n        //   inserted at the head pointer is inserted before the\n        //   current `oldParts[oldHead]`, and a part inserted at the\n        //   tail pointer is inserted before `newParts[newTail+1]`. The\n        //   seeming asymmetry lies in the fact that new parts are\n        //   moved into place outside in, so to the right of the head\n        //   pointer are old parts, and to the right of the tail\n        //   pointer are new parts.\n        //\n        // * We always restart back from the top of the algorithm,\n        //   allowing matching and simple updates in place to\n        //   continue...\n        //\n        // * Example below: the head pointers once again match, so\n        //   simply update part 1 and record it in the `newParts`\n        //   array.  Last, advance both head pointers.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //            newHead ^        ^ newTail\n        //\n        // * As mentioned above, items that were moved as a result of\n        //   being stuck (the final else clause in the code below) are\n        //   marked with null, so we always advance old pointers over\n        //   these so we're comparing the next actual old value on\n        //   either end.\n        //\n        // * Example below: `oldHead` is null (already placed in\n        //   newParts), so advance `oldHead`.\n        //\n        //            oldHead v     v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n        //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //               newHead ^     ^ newTail\n        //\n        // * Note it's not critical to mark old parts as null when they\n        //   are moved from head to tail or tail to head, since they\n        //   will be outside the pointer range and never visited again.\n        //\n        // * Example below: Here the old tail key matches the new head\n        //   key, so the part at the `oldTail` position and move its\n        //   DOM to the new head position (before `oldParts[oldHead]`).\n        //   Last, advance `oldTail` and `newHead` pointers.\n        //\n        //               oldHead v  v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n        //                                     advance oldTail & newHead\n        //               newHead ^     ^ newTail\n        //\n        // * Example below: Old and new head keys match, so update the\n        //   old head part in place, and advance the `oldHead` and\n        //   `newHead` pointers.\n        //\n        //               oldHead v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n        //                                      newHead\n        //                  newHead ^  ^ newTail\n        //\n        // * Once the new or old pointers move past each other then all\n        //   we have left is additions (if old list exhausted) or\n        //   removals (if new list exhausted). Those are handled in the\n        //   final while loops at the end.\n        //\n        // * Example below: `oldHead` exceeded `oldTail`, so we're done\n        //   with the main loop.  Create the remaining part and insert\n        //   it at the new head position, and the update is complete.\n        //\n        //                   (oldHead > oldTail)\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //                     newHead ^ newTail\n        //\n        // * Note that the order of the if/else clauses is not\n        //   important to the algorithm, as long as the null checks\n        //   come first (to ensure we're always working on valid old\n        //   parts) and that the final else clause comes last (since\n        //   that's where the expensive moves occur). The order of\n        //   remaining clauses is is just a simple guess at which cases\n        //   will be most common.\n        //\n        // * TODO(kschaaf) Note, we could calculate the longest\n        //   increasing subsequence (LIS) of old items in new position,\n        //   and only move those not in the LIS set. However that costs\n        //   O(nlogn) time and adds a bit more code, and only helps\n        //   make rare types of mutations require fewer moves. The\n        //   above handles removes, adds, reversal, swaps, and single\n        //   moves of contiguous items in linear time, in the minimum\n        //   number of moves. As the number of multiple moves where LIS\n        //   might help approaches a random shuffle, the LIS\n        //   optimization becomes less helpful, so it seems not worth\n        //   the code at this point. Could reconsider if a compelling\n        //   case arises.\n        while (oldHead <= oldTail && newHead <= newTail) {\n            if (oldParts[oldHead] === null) {\n                // `null` means old part at head has already been used\n                // below; skip\n                oldHead++;\n            }\n            else if (oldParts[oldTail] === null) {\n                // `null` means old part at tail has already been used\n                // below; skip\n                oldTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newHead]) {\n                // Old head matches new head; update in place\n                newParts[newHead] =\n                    updatePart(oldParts[oldHead], newValues[newHead]);\n                oldHead++;\n                newHead++;\n            }\n            else if (oldKeys[oldTail] === newKeys[newTail]) {\n                // Old tail matches new tail; update in place\n                newParts[newTail] =\n                    updatePart(oldParts[oldTail], newValues[newTail]);\n                oldTail--;\n                newTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newTail]) {\n                // Old head matches new tail; update and move to new tail\n                newParts[newTail] =\n                    updatePart(oldParts[oldHead], newValues[newTail]);\n                insertPartBefore(containerPart, oldParts[oldHead], newParts[newTail + 1]);\n                oldHead++;\n                newTail--;\n            }\n            else if (oldKeys[oldTail] === newKeys[newHead]) {\n                // Old tail matches new head; update and move to new head\n                newParts[newHead] =\n                    updatePart(oldParts[oldTail], newValues[newHead]);\n                insertPartBefore(containerPart, oldParts[oldTail], oldParts[oldHead]);\n                oldTail--;\n                newHead++;\n            }\n            else {\n                if (newKeyToIndexMap === undefined) {\n                    // Lazily generate key-to-index maps, used for removals &\n                    // moves below\n                    newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                    oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                }\n                if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                    // Old head is no longer in new list; remove\n                    removePart(oldParts[oldHead]);\n                    oldHead++;\n                }\n                else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                    // Old tail is no longer in new list; remove\n                    removePart(oldParts[oldTail]);\n                    oldTail--;\n                }\n                else {\n                    // Any mismatches at this point are due to additions or\n                    // moves; see if we have an old part we can reuse and move\n                    // into place\n                    const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                    const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n                    if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(containerPart, oldParts[oldHead]);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                    }\n                    else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(containerPart, oldPart, oldParts[oldHead]);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex] = null;\n                    }\n                    newHead++;\n                }\n            }\n        }\n        // Add parts for any remaining new values\n        while (newHead <= newTail) {\n            // For all remaining additions, we insert before last new\n            // tail, since old pointers are no longer valid\n            const newPart = createAndInsertPart(containerPart, newParts[newTail + 1]);\n            updatePart(newPart, newValues[newHead]);\n            newParts[newHead++] = newPart;\n        }\n        // Remove any remaining unused old parts\n        while (oldHead <= oldTail) {\n            const oldPart = oldParts[oldHead++];\n            if (oldPart !== null) {\n                removePart(oldPart);\n            }\n        }\n        // Save order of new parts for next round\n        partListCache.set(containerPart, newParts);\n        keyListCache.set(containerPart, newKeys);\n    };\n});\n//# sourceMappingURL=repeat.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isPrimitive } from '../lib/parts.js';\nimport { directive, NodePart } from '../lit-html.js';\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap();\n/**\n * Used to clone existing node instead of each time creating new one which is\n * slower\n */\nconst emptyTemplateNode = document.createElement('template');\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value) => (part) => {\n    if (!(part instanceof NodePart)) {\n        throw new Error('unsafeHTML can only be used in text bindings');\n    }\n    const previousValue = previousValues.get(part);\n    if (previousValue !== undefined && isPrimitive(value) &&\n        value === previousValue.value && part.value === previousValue.fragment) {\n        return;\n    }\n    const template = emptyTemplateNode.cloneNode();\n    template.innerHTML = value; // innerHTML casts to string internally\n    const fragment = document.importNode(template.content, true);\n    part.setValue(fragment);\n    previousValues.set(part, { value, fragment });\n});\n//# sourceMappingURL=unsafe-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isPrimitive } from '../lib/parts.js';\nimport { directive } from '../lit-html.js';\nconst _state = new WeakMap();\n// Effectively infinity, but a SMI.\nconst _infinity = 0x7fffffff;\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n *     const content = fetch('./content.txt').then(r => r.text());\n *     html`${until(content, html`<span>Loading...</span>`)}`\n */\nexport const until = directive((...args) => (part) => {\n    let state = _state.get(part);\n    if (state === undefined) {\n        state = {\n            lastRenderedIndex: _infinity,\n            values: [],\n        };\n        _state.set(part, state);\n    }\n    const previousValues = state.values;\n    let previousLength = previousValues.length;\n    state.values = args;\n    for (let i = 0; i < args.length; i++) {\n        // If we've rendered a higher-priority value already, stop.\n        if (i > state.lastRenderedIndex) {\n            break;\n        }\n        const value = args[i];\n        // Render non-Promise values immediately\n        if (isPrimitive(value) ||\n            typeof value.then !== 'function') {\n            part.setValue(value);\n            state.lastRenderedIndex = i;\n            // Since a lower-priority value will never overwrite a higher-priority\n            // synchronous value, we can stop processing now.\n            break;\n        }\n        // If this is a Promise we've already handled, skip it.\n        if (i < previousLength && value === previousValues[i]) {\n            continue;\n        }\n        // We have a Promise that we haven't seen before, so priorities may have\n        // changed. Forget what we rendered before.\n        state.lastRenderedIndex = _infinity;\n        previousLength = 0;\n        Promise.resolve(value).then((resolvedValue) => {\n            const index = state.values.indexOf(value);\n            // If state.values doesn't contain the value, we've re-rendered without\n            // the value, so don't render it. Then, only render if the value is\n            // higher-priority than what's already been rendered.\n            if (index > -1 && index < state.lastRenderedIndex) {\n                state.lastRenderedIndex = index;\n                part.setValue(resolvedValue);\n                part.commit();\n            }\n        });\n    }\n});\n//# sourceMappingURL=until.js.map","/**\n * @license\n * Copyright (c) 2020 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, BooleanAttributePart, directive, EventPart, NodePart, PropertyPart } from '../lit-html.js';\n/**\n * Checks binding values against live DOM values, instead of previously bound\n * values, when determining whether to update the value.\n *\n * This is useful for cases where the DOM value may change from outside of\n * lit-html, such as with a binding to an `<input>` element's `value` property,\n * a content editable elements text, or to a custom element that changes it's\n * own properties or attributes.\n *\n * In these cases if the DOM value changes, but the value set through lit-html\n * bindings hasn't, lit-html won't know to update the DOM value and will leave\n * it alone. If this is not what you want—if you want to overwrite the DOM\n * value with the bound value no matter what—use the `live()` directive:\n *\n *     html`<input .value=${live(x)}>`\n *\n * `live()` performs a strict equality check agains the live DOM value, and if\n * the new value is equal to the live value, does nothing. This means that\n * `live()` should not be used when the binding will cause a type conversion. If\n * you use `live()` with an attribute binding, make sure that only strings are\n * passed in, or the binding will update every render.\n */\nexport const live = directive((value) => (part) => {\n    let previousValue;\n    if (part instanceof EventPart || part instanceof NodePart) {\n        throw new Error('The `live` directive is not allowed on text or event bindings');\n    }\n    if (part instanceof BooleanAttributePart) {\n        checkStrings(part.strings);\n        previousValue = part.element.hasAttribute(part.name);\n        // This is a hack needed because BooleanAttributePart doesn't have a\n        // committer and does its own dirty checking after directives\n        part.value = previousValue;\n    }\n    else {\n        const { element, name, strings } = part.committer;\n        checkStrings(strings);\n        if (part instanceof PropertyPart) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            previousValue = element[name];\n            if (previousValue === value) {\n                return;\n            }\n        }\n        else if (part instanceof AttributePart) {\n            previousValue = element.getAttribute(name);\n        }\n        if (previousValue === String(value)) {\n            return;\n        }\n    }\n    part.setValue(value);\n});\nconst checkStrings = (strings) => {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n        throw new Error('`live` bindings can only contain a single expression');\n    }\n};\n//# sourceMappingURL=live.js.map","import { AttributePart, Directive } from 'lit-html-optimised';\n\nconst detached: WeakMap<AttributePart, ElementData> = new WeakMap();\n\nexport interface ElementData {\n  element: Element;\n  nextSibling: ChildNode | Node | null;\n  previousSibling: ChildNode | Node | null;\n  parent: (Node & ParentNode) | null;\n}\n\nexport default class Detach extends Directive {\n  private ifFn: () => boolean;\n\n  constructor(ifFn: () => boolean) {\n    super();\n    this.ifFn = ifFn;\n  }\n\n  public body(part: AttributePart) {\n    const detach = this.ifFn();\n    const element: Element = part.committer.element;\n    if (detach) {\n      if (!detached.has(part)) {\n        detached.set(part, {\n          element,\n          nextSibling: element.nextSibling,\n          previousSibling: element.previousSibling,\n          parent: element.parentNode,\n        });\n      }\n      element.remove();\n    } else {\n      const data = detached.get(part);\n      if (data) {\n        if (data.nextSibling && data.nextSibling.parentNode) {\n          data.nextSibling.parentNode.insertBefore(data.element, data.nextSibling);\n        } else if (data.previousSibling && data.previousSibling.parentNode) {\n          data.previousSibling.parentNode.appendChild(data.element);\n        } else if (data.parent) {\n          data.parent.appendChild(data.element);\n        }\n        detached.delete(part);\n      }\n    }\n  }\n}\n","import { Directive, Part } from 'lit-html-optimised';\nimport { PropertiesHyphenFallback as CSSProp } from 'csstype';\n\nexport default class StyleMap extends Directive {\n  public style: CSSProp;\n  private previous: {};\n  private detach: boolean;\n  private toRemove: string[] = [];\n  private toUpdate: string[] = [];\n  private debug = false;\n\n  constructor(styleInfo: CSSProp, detach: boolean = false) {\n    super();\n    this.previous = {};\n    this.style = styleInfo;\n    this.detach = detach;\n  }\n\n  public setStyle(styleInfo: CSSProp) {\n    this.style = styleInfo;\n  }\n\n  public setDebug(debug = true) {\n    this.debug = debug;\n  }\n\n  public setDetach(detach: boolean) {\n    this.detach = detach;\n  }\n\n  public body(part: Part) {\n    this.toRemove.length = 0;\n    this.toUpdate.length = 0;\n    // @ts-ignore\n    const element = part.committer.element as HTMLElement;\n    const elementStyle = element.style;\n    let previous = this.previous;\n\n    if (element.attributes.getNamedItem('style')) {\n      // @ts-ignore\n      const currentElementStyles = element.attributes\n        .getNamedItem('style')\n        .value.split(';')\n        .map((item) => item.substr(0, item.indexOf(':')).trim())\n        .filter((item) => !!item);\n      for (const name of currentElementStyles) {\n        // @ts-ignore\n        if (this.style[name] === undefined) {\n          if (!this.toRemove.includes(name)) this.toRemove.push(name);\n        }\n      }\n    }\n\n    for (const name in previous) {\n      if (!this.style.hasOwnProperty(name)) continue;\n      // @ts-ignore\n      if (this.style[name] === undefined) {\n        if (!this.toRemove.includes(name)) this.toRemove.push(name);\n      }\n    }\n    for (const name in this.style) {\n      if (!this.style.hasOwnProperty(name)) continue;\n      // @ts-ignore\n      const value = this.style[name];\n      // @ts-ignore\n      const prev = previous[name];\n      if (prev !== undefined && prev === value) {\n        continue;\n      }\n      this.toUpdate.push(name);\n    }\n\n    if (this.debug) {\n      console.log('[StyleMap] to remove', [...this.toRemove]);\n      console.log('[StyleMap] to update', [...this.toUpdate]);\n    }\n\n    if (this.toRemove.length || this.toUpdate.length) {\n      let parent, nextSibling;\n      if (this.detach) {\n        parent = element.parentNode;\n        if (parent) {\n          nextSibling = element.nextSibling;\n          element.remove();\n        }\n      }\n      for (const name of this.toRemove) {\n        elementStyle.removeProperty(name);\n        // @ts-ignore\n        if (elementStyle[name]) delete elementStyle[name];\n      }\n      for (const name of this.toUpdate) {\n        // @ts-ignore\n        const value = this.style[name];\n        if (!name.includes('-')) {\n          // @ts-ignore\n          elementStyle[name] = value;\n        } else {\n          elementStyle.setProperty(name, value);\n        }\n      }\n      if (this.detach && parent) {\n        // @ts-ignore\n        parent.insertBefore(element, nextSibling);\n      }\n      this.previous = { ...this.style };\n    }\n  }\n}\n","class Action {\n  public isAction: boolean = true;\n}\nAction.prototype.isAction = true;\nexport default Action;\n","import Action from './Action';\n\nexport type EventToNormalize = PointerEvent | TouchEvent | WheelEvent | Event;\n\nexport interface Options {\n  element?: HTMLElement;\n  axis?: string;\n  threshold?: number;\n  onDown?: (data: NormalizedEvent) => void;\n  onMove?: (data: NormalizedEvent) => void;\n  onUp?: (data: NormalizedEvent) => void;\n  onWheel?: (data: NormalizedEvent) => void;\n}\n\nexport interface InternalOptions extends Options {\n  element: HTMLElement;\n  axis: string;\n  threshold: number;\n  onDown: (data: NormalizedEvent) => void;\n  onMove: (data: NormalizedEvent) => void;\n  onUp: (data: NormalizedEvent) => void;\n  onWheel: (data: NormalizedEvent) => void;\n}\n\nexport interface Props {\n  pointerOptions: InternalOptions;\n  [key: string]: unknown;\n}\n\nexport interface NormalizedEvent {\n  x: number;\n  y: number;\n  z?: number;\n  pageX?: number;\n  pageY?: number;\n  clientX?: number;\n  clientY?: number;\n  screenX?: number;\n  screenY?: number;\n  movementX?: number;\n  movementY?: number;\n  initialX?: number;\n  initialY?: number;\n  lastX?: number;\n  lastY?: number;\n  event: Event;\n}\n\nconst defaultOptions = {\n  element: document.createTextNode(''),\n  axis: 'xy',\n  threshold: 10,\n  onDown() {},\n  onMove() {},\n  onUp() {},\n  onWheel() {},\n};\n\nconst pointerEventsExists = typeof PointerEvent !== 'undefined';\nlet id = 0;\n\nexport default class PointerAction extends Action {\n  private id: number;\n  private moving: string = '';\n  private initialX: number = 0;\n  private initialY: number = 0;\n  private lastY: number = 0;\n  private lastX: number = 0;\n  private element: Element;\n  private options: InternalOptions;\n\n  constructor(element: Element, data: Props) {\n    super();\n    this.onPointerDown = this.onPointerDown.bind(this);\n    this.onPointerMove = this.onPointerMove.bind(this);\n    this.onPointerUp = this.onPointerUp.bind(this);\n    this.onWheel = this.onWheel.bind(this);\n    this.element = element;\n    this.id = ++id;\n    this.options = { ...defaultOptions, ...data.pointerOptions } as InternalOptions;\n    if (pointerEventsExists) {\n      element.addEventListener('pointerdown', this.onPointerDown);\n      document.addEventListener('pointermove', this.onPointerMove);\n      document.addEventListener('pointerup', this.onPointerUp);\n    } else {\n      element.addEventListener('touchstart', this.onPointerDown);\n      document.addEventListener('touchmove', this.onPointerMove, { passive: false });\n      document.addEventListener('touchend', this.onPointerUp);\n      document.addEventListener('touchcancel', this.onPointerUp);\n      element.addEventListener('mousedown', this.onPointerDown);\n      document.addEventListener('mousemove', this.onPointerMove, { passive: false });\n      document.addEventListener('mouseup', this.onPointerUp);\n    }\n  }\n\n  private normalizeMouseWheelEvent(event: EventToNormalize): NormalizedEvent {\n    // @ts-ignore\n    let x = event.deltaX || 0;\n    // @ts-ignore\n    let y = event.deltaY || 0;\n    // @ts-ignore\n    let z = event.deltaZ || 0;\n    // @ts-ignore\n    const mode = event.deltaMode;\n    // @ts-ignore\n    const lineHeight = parseInt(getComputedStyle(event.target).getPropertyValue('line-height'));\n    let scale = 1;\n    switch (mode) {\n      case 1:\n        scale = lineHeight;\n        break;\n      case 2:\n        // @ts-ignore\n        scale = window.height;\n        break;\n    }\n    x *= scale;\n    y *= scale;\n    z *= scale;\n    return { x, y, z, event };\n  }\n\n  public onWheel(event: WheelEvent) {\n    const normalized = this.normalizeMouseWheelEvent(event);\n    this.options.onWheel(normalized);\n  }\n\n  private normalizePointerEvent(event: EventToNormalize): NormalizedEvent {\n    let result = { x: 0, y: 0, pageX: 0, pageY: 0, clientX: 0, clientY: 0, screenX: 0, screenY: 0, event };\n    switch (event.type) {\n      case 'wheel':\n        const wheel = this.normalizeMouseWheelEvent(event);\n        result.x = wheel.x;\n        result.y = wheel.y;\n        result.pageX = result.x;\n        result.pageY = result.y;\n        result.screenX = result.x;\n        result.screenY = result.y;\n        result.clientX = result.x;\n        result.clientY = result.y;\n        break;\n      case 'touchstart':\n      case 'touchmove':\n      case 'touchend':\n      case 'touchcancel':\n        result.x = (event as TouchEvent).changedTouches[0].screenX;\n        result.y = (event as TouchEvent).changedTouches[0].screenY;\n        result.pageX = (event as TouchEvent).changedTouches[0].pageX;\n        result.pageY = (event as TouchEvent).changedTouches[0].pageY;\n        result.screenX = (event as TouchEvent).changedTouches[0].screenX;\n        result.screenY = (event as TouchEvent).changedTouches[0].screenY;\n        result.clientX = (event as TouchEvent).changedTouches[0].clientX;\n        result.clientY = (event as TouchEvent).changedTouches[0].clientY;\n        break;\n      default:\n        result.x = (event as PointerEvent).x;\n        result.y = (event as PointerEvent).y;\n        result.pageX = (event as PointerEvent).pageX;\n        result.pageY = (event as PointerEvent).pageY;\n        result.screenX = (event as PointerEvent).screenX;\n        result.screenY = (event as PointerEvent).screenY;\n        result.clientX = (event as PointerEvent).clientX;\n        result.clientY = (event as PointerEvent).clientY;\n        break;\n    }\n    return result;\n  }\n\n  private onPointerDown(event: EventToNormalize) {\n    if (event.type === 'mousedown' && (event as MouseEvent).button !== 0) return;\n    this.moving = 'xy';\n    const normalized = this.normalizePointerEvent(event);\n    this.lastX = normalized.x;\n    this.lastY = normalized.y;\n    this.initialX = normalized.x;\n    this.initialY = normalized.y;\n    this.options.onDown(normalized);\n  }\n\n  private handleX(normalized: NormalizedEvent) {\n    let movementX = normalized.x - this.lastX;\n    this.lastY = normalized.y;\n    this.lastX = normalized.x;\n    return movementX;\n  }\n\n  private handleY(normalized: NormalizedEvent) {\n    let movementY = normalized.y - this.lastY;\n    this.lastY = normalized.y;\n    this.lastX = normalized.x;\n    return movementY;\n  }\n\n  private onPointerMove(event: EventToNormalize) {\n    if (this.moving === '' || (event.type === 'mousemove' && (event as MouseEvent).button !== 0)) return;\n    const normalized = this.normalizePointerEvent(event);\n    if (this.options.axis === 'x|y') {\n      let movementX = 0,\n        movementY = 0;\n      if (\n        this.moving === 'x' ||\n        (this.moving === 'xy' && Math.abs(normalized.x - this.initialX) > this.options.threshold)\n      ) {\n        this.moving = 'x';\n        movementX = this.handleX(normalized);\n      }\n      if (\n        this.moving === 'y' ||\n        (this.moving === 'xy' && Math.abs(normalized.y - this.initialY) > this.options.threshold)\n      ) {\n        this.moving = 'y';\n        movementY = this.handleY(normalized);\n      }\n      this.options.onMove({\n        movementX,\n        movementY,\n        x: normalized.x,\n        y: normalized.y,\n        initialX: this.initialX,\n        initialY: this.initialY,\n        lastX: this.lastX,\n        lastY: this.lastY,\n        event,\n      });\n    } else if (this.options.axis === 'xy') {\n      let movementX = 0,\n        movementY = 0;\n      if (Math.abs(normalized.x - this.initialX) > this.options.threshold) {\n        movementX = this.handleX(normalized);\n      }\n      if (Math.abs(normalized.y - this.initialY) > this.options.threshold) {\n        movementY = this.handleY(normalized);\n      }\n      this.options.onMove({\n        movementX,\n        movementY,\n        x: normalized.x,\n        y: normalized.y,\n        initialX: this.initialX,\n        initialY: this.initialY,\n        lastX: this.lastX,\n        lastY: this.lastY,\n        event,\n      });\n    } else if (this.options.axis === 'x') {\n      if (\n        this.moving === 'x' ||\n        (this.moving === 'xy' && Math.abs(normalized.x - this.initialX) > this.options.threshold)\n      ) {\n        this.moving = 'x';\n        // @ts-ignore\n        this.options.onMove({\n          movementX: this.handleX(normalized),\n          movementY: 0,\n          initialX: this.initialX,\n          initialY: this.initialY,\n          lastX: this.lastX,\n          lastY: this.lastY,\n          event,\n        });\n      }\n    } else if (this.options.axis === 'y') {\n      let movementY = 0;\n      if (\n        this.moving === 'y' ||\n        (this.moving === 'xy' && Math.abs(normalized.y - this.initialY) > this.options.threshold)\n      ) {\n        this.moving = 'y';\n        movementY = this.handleY(normalized);\n      }\n      this.options.onMove({\n        movementX: 0,\n        movementY,\n        x: normalized.x,\n        y: normalized.y,\n        initialX: this.initialX,\n        initialY: this.initialY,\n        lastX: this.lastX,\n        lastY: this.lastY,\n        event,\n      });\n    }\n  }\n\n  private onPointerUp(event: EventToNormalize) {\n    this.moving = '';\n    const normalized = this.normalizePointerEvent(event);\n    this.options.onUp({\n      movementX: 0,\n      movementY: 0,\n      x: normalized.x,\n      y: normalized.y,\n      initialX: this.initialX,\n      initialY: this.initialY,\n      lastX: this.lastX,\n      lastY: this.lastY,\n      event,\n    });\n    this.lastY = 0;\n    this.lastX = 0;\n  }\n\n  public destroy(element: Element) {\n    if (pointerEventsExists) {\n      element.removeEventListener('pointerdown', this.onPointerDown);\n      document.removeEventListener('pointermove', this.onPointerMove);\n      document.removeEventListener('pointerup', this.onPointerUp);\n    } else {\n      element.removeEventListener('mousedown', this.onPointerDown);\n      document.removeEventListener('mousemove', this.onPointerMove);\n      document.removeEventListener('mouseup', this.onPointerUp);\n      element.removeEventListener('touchstart', this.onPointerDown);\n      document.removeEventListener('touchmove', this.onPointerMove);\n      document.removeEventListener('touchend', this.onPointerUp);\n      document.removeEventListener('touchcancel', this.onPointerUp);\n    }\n  }\n}\n","import { AnyVido } from './vido';\n\nexport default function getPublicComponentMethods(\n  components: Map<string, any>,\n  actionsByInstance: Map<string, any>,\n  clone: (obj: object) => object\n) {\n  return class PublicComponentMethods {\n    public instance: string;\n    public name: string;\n    public vidoInstance: any;\n    public props: any;\n    public destroyed = false;\n\n    constructor(instance: string, vidoInstance: AnyVido, props: unknown = {}) {\n      this.instance = instance;\n      this.name = vidoInstance.name;\n      this.vidoInstance = vidoInstance;\n      this.props = props;\n      this.destroy = this.destroy.bind(this);\n      this.update = this.update.bind(this);\n      this.change = this.change.bind(this);\n      this.html = this.html.bind(this);\n    }\n\n    /**\n     * Destroy component\n     */\n    public destroy(): void {\n      if (this.destroyed) return;\n      if (this.vidoInstance.debug) {\n        console.groupCollapsed(`destroying component ${this.instance}`);\n        console.log(clone({ components: components.keys(), actionsByInstance }));\n        console.trace();\n        console.groupEnd();\n      }\n      this.vidoInstance.destroyComponent(this.instance, this.vidoInstance);\n      this.destroyed = true;\n    }\n\n    /**\n     * Update template - trigger rendering process\n     */\n    public update(callback: (() => void) | undefined = undefined) {\n      if (this.vidoInstance.debug) {\n        console.groupCollapsed(`updating component ${this.instance}`);\n        console.log(clone({ components: components.keys(), actionsByInstance }));\n        console.trace();\n        console.groupEnd();\n      }\n      return this.vidoInstance.updateTemplate(callback);\n    }\n\n    /**\n     * Change component input properties\n     * @param {any} newProps\n     */\n    public change(newProps: unknown, options: unknown = {}) {\n      if (this.vidoInstance.debug) {\n        console.groupCollapsed(`changing component ${this.instance}`);\n        console.log(clone({ props: this.props, newProps: newProps, components: components.keys(), actionsByInstance }));\n        console.trace();\n        console.groupEnd();\n      }\n      const component = components.get(this.instance);\n      if (component) component.change(newProps, options);\n    }\n\n    /**\n     * Get component lit-html template\n     * @param {} templateProps\n     */\n    public html(templateProps: unknown = {}) {\n      const component = components.get(this.instance);\n      if (component && !component.destroyed) {\n        return component.update(templateProps, this.vidoInstance);\n      }\n      return undefined;\n    }\n\n    public _getComponents() {\n      return components;\n    }\n\n    public _getActions() {\n      return actionsByInstance;\n    }\n  };\n}\n","import { Directive, AttributePart } from 'lit-html-optimised';\n\nexport default function getActionsCollector(actionsByInstance: Map<string, any>) {\n  return class ActionsCollector extends Directive {\n    instance: string;\n    actions: unknown[] = [];\n    props: unknown;\n\n    constructor(instance: string) {\n      super();\n      this.instance = instance;\n    }\n\n    public set(actions: unknown[], props: object) {\n      this.actions = actions;\n      this.props = props;\n      // props must be mutable! (do not do this -> {...props})\n      // because we will modify action props with onChange and can reuse existin instance\n      return this;\n    }\n\n    public body(part: AttributePart) {\n      const element = part.committer.element as HTMLElement;\n      for (const create of this.actions) {\n        if (typeof create !== 'undefined') {\n          let exists;\n          if (actionsByInstance.has(this.instance)) {\n            for (const action of actionsByInstance.get(this.instance)) {\n              if (action.componentAction.create === create && action.element === element) {\n                exists = action;\n                break;\n              }\n            }\n          }\n          if (!exists) {\n            // @ts-ignore\n            if (typeof element.vido !== 'undefined') delete element.vido;\n            const componentAction = {\n              create,\n              update() {},\n              destroy() {},\n            };\n            const action = { instance: this.instance, componentAction, element, props: this.props };\n            let byInstance = [];\n            if (actionsByInstance.has(this.instance)) {\n              byInstance = actionsByInstance.get(this.instance);\n            }\n            byInstance.push(action);\n            actionsByInstance.set(this.instance, byInstance);\n          } else {\n            exists.props = this.props;\n          }\n        }\n      }\n    }\n  };\n}\n","import { AnyVido, htmlResult } from './vido';\n\nexport default function getInternalComponentMethods(\n  components: Map<string, any>,\n  actionsByInstance: Map<string, any>,\n  clone: (obj: object) => object\n) {\n  return class InternalComponentMethods {\n    public instance: string;\n    public vidoInstance: any;\n    public renderFunction: (changedProps: any) => void;\n    public content: any;\n    public destroyed = false;\n\n    constructor(instance: string, vidoInstance: AnyVido, renderFunction: (arg: any) => htmlResult) {\n      this.instance = instance;\n      this.vidoInstance = vidoInstance;\n      this.renderFunction = renderFunction;\n      this.destroy = this.destroy.bind(this);\n      this.update = this.update.bind(this);\n      this.change = this.change.bind(this);\n    }\n\n    public destroy() {\n      if (this.destroyed) return;\n      if (this.vidoInstance.debug) {\n        console.groupCollapsed(`component destroy method fired ${this.instance}`);\n        console.log(\n          clone({\n            props: this.vidoInstance.props,\n            components: components.keys(),\n            destroyable: this.vidoInstance.destroyable,\n            actionsByInstance,\n          })\n        );\n        console.trace();\n        console.groupEnd();\n      }\n      if (this.content && typeof this.content.destroy === 'function') {\n        this.content.destroy();\n      }\n      for (const d of this.vidoInstance.destroyable) {\n        d();\n      }\n      this.vidoInstance.onChangeFunctions.length = 0;\n      this.vidoInstance.destroyable.length = 0;\n      this.vidoInstance.destroyed = true;\n      this.destroyed = true;\n      this.vidoInstance.update();\n    }\n\n    public update(props = {}) {\n      if (this.vidoInstance.debug) {\n        console.groupCollapsed(`component update method fired ${this.instance}`);\n        console.log(clone({ components: components.keys(), actionsByInstance }));\n        console.trace();\n        console.groupEnd();\n      }\n      return this.renderFunction(props);\n    }\n\n    public change(changedProps: unknown, options = { leave: false }) {\n      const props = changedProps;\n      if (this.vidoInstance.debug) {\n        console.groupCollapsed(`component change method fired ${this.instance}`);\n        console.log(\n          clone({\n            props,\n            components: components.keys(),\n            onChangeFunctions: this.vidoInstance.onChangeFunctions,\n            changedProps,\n            actionsByInstance,\n          })\n        );\n        console.trace();\n        console.groupEnd();\n      }\n      for (const fn of this.vidoInstance.onChangeFunctions) {\n        fn(changedProps, options);\n      }\n    }\n  };\n}\n","/**\n * Schedule - a throttle function that uses requestAnimationFrame to limit the rate at which a function is called.\n *\n * @param {function} fn\n * @returns {function}\n */\nexport function schedule(fn: (argument: unknown) => void | any) {\n  let frameId = 0;\n  function wrapperFn(argument: unknown) {\n    if (frameId) {\n      return;\n    }\n    function executeFrame() {\n      frameId = 0;\n      fn.apply(undefined, [argument]);\n    }\n    frameId = requestAnimationFrame(executeFrame);\n  }\n  return wrapperFn;\n}\n\n/**\n * Is object - helper function to determine if specified variable is an object\n *\n * @param {any} item\n * @returns {boolean}\n */\nfunction isObject(item: unknown) {\n  return item && typeof item === 'object' && item !== null && item.constructor && item.constructor.name === 'Object';\n}\n\nexport interface UnknownObject {\n  [key: string]: unknown;\n}\n\n/**\n * Merge deep - helper function which will merge objects recursively - creating brand new one - like clone\n *\n * @param {object} target\n * @params {[object]} sources\n * @returns {object}\n */\nexport function mergeDeep<T>(target: any, ...sources: any[]): T {\n  const source = sources.shift();\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (typeof source[key].clone === 'function') {\n          target[key] = source[key].clone();\n        } else {\n          if (typeof target[key] === 'undefined') {\n            target[key] = {};\n          }\n          target[key] = mergeDeep(target[key], source[key]);\n        }\n      } else if (Array.isArray(source[key])) {\n        target[key] = new Array(source[key].length);\n        let index = 0;\n        for (let item of source[key]) {\n          if (isObject(item)) {\n            if (typeof item.clone === 'function') {\n              target[key][index] = item.clone();\n            } else {\n              target[key][index] = mergeDeep({}, item);\n            }\n          } else {\n            target[key][index] = item;\n          }\n          index++;\n        }\n      } else {\n        target[key] = source[key];\n      }\n    }\n  }\n  if (!sources.length) {\n    return target;\n  }\n  return mergeDeep(target, ...sources);\n}\n\n/**\n * Clone helper function\n *\n * @param source\n * @returns {object} cloned source\n */\nexport function clone<T>(source: object): T {\n  // @ts-ignore\n  if (typeof source.actions !== 'undefined') {\n    // @ts-ignore\n    const actns = source.actions.map((action) => {\n      const result = { ...action };\n      const props = { ...result.props };\n      delete props.state;\n      delete props.api;\n      delete result.element;\n      result.props = props;\n      return result;\n    });\n    // @ts-ignore\n    source.actions = actns;\n  }\n  return mergeDeep({}, source);\n}\n\nexport default {\n  mergeDeep,\n  clone,\n  schedule,\n};\n","import { ComponentInstance, Component, AnyVido } from './vido';\n\nexport type SlotInstances = {\n  [key: string]: ComponentInstance[];\n};\n\nexport interface SlotStorage {\n  [key: string]: Component[];\n}\n\nexport class Slots {\n  private slotInstances: SlotInstances = {};\n  private vido: AnyVido;\n  private destroyed = false;\n  private props: unknown;\n\n  constructor(vido: AnyVido, props: unknown) {\n    this.vido = vido;\n    this.props = props;\n    this.destroy = this.destroy.bind(this);\n    this.change = this.change.bind(this);\n    this.html = this.html.bind(this);\n    this.getInstances = this.getInstances.bind(this);\n    this.setComponents = this.setComponents.bind(this);\n\n    this.vido.onDestroy(() => {\n      this.destroy();\n    });\n  }\n\n  public setComponents(slots: SlotStorage) {\n    if (!slots || this.destroyed) return;\n    for (const slotPlacement in slots) {\n      const slotsComponents = slots[slotPlacement];\n      if (typeof this.slotInstances[slotPlacement] === 'undefined') {\n        this.slotInstances[slotPlacement] = [];\n      }\n      for (const instance of this.slotInstances[slotPlacement]) {\n        instance.destroy();\n      }\n      this.slotInstances[slotPlacement].length = 0;\n      for (const component of slotsComponents) {\n        this.slotInstances[slotPlacement].push(this.vido.createComponent(component, this.props));\n      }\n    }\n    this.vido.update();\n  }\n\n  public destroy(): void {\n    if (this.destroyed) return;\n    for (const slotPlacement in this.slotInstances) {\n      for (const instance of this.slotInstances[slotPlacement]) {\n        instance.destroy();\n      }\n      this.slotInstances[slotPlacement].length = 0;\n    }\n    this.destroyed = true;\n  }\n\n  public change(changedProps: unknown, options = undefined): void {\n    if (this.destroyed) return;\n    for (const slotPlacement in this.slotInstances) {\n      const instances = this.slotInstances[slotPlacement] as ComponentInstance[];\n      for (const slot of instances) {\n        slot.change(changedProps, options);\n      }\n    }\n  }\n\n  public getInstances(placement: string | undefined): ComponentInstance[] | SlotInstances {\n    if (this.destroyed) return [];\n    if (placement === undefined) return this.slotInstances;\n    return this.slotInstances[placement];\n  }\n\n  public html(placement: string, templateProps?: any) {\n    if (this.destroyed) return;\n    if (!this.slotInstances[placement] || this.slotInstances[placement].length === 0) {\n      return templateProps;\n    }\n    let result = templateProps;\n    for (const slotInstance of this.slotInstances[placement]) {\n      result = slotInstance.html(result);\n    }\n    return result;\n  }\n\n  public getProps() {\n    return this.props;\n  }\n\n  public isDestroyed() {\n    return this.destroyed;\n  }\n}\n","import { AttributePart } from 'lit-html-optimised';\nimport { DirectiveFactory } from 'lit-html-optimised/lib/directive';\n\nexport default function prepareGetElement(directive: <F extends DirectiveFactory>(f: F) => F) {\n  return function getElement(callback: (element: Element) => void) {\n    return directive(() => (part: AttributePart) => {\n      callback(part.committer.element);\n    })();\n  };\n}\n","import { render, html, directive, svg, Directive } from 'lit-html-optimised';\nimport { asyncAppend } from 'lit-html-optimised/directives/async-append';\nimport { asyncReplace } from 'lit-html-optimised/directives/async-replace';\nimport { cache } from 'lit-html-optimised/directives/cache';\nimport { classMap } from 'lit-html-optimised/directives/class-map';\nimport { guard } from 'lit-html-optimised/directives/guard';\nimport { ifDefined } from 'lit-html-optimised/directives/if-defined';\nimport { repeat } from 'lit-html-optimised/directives/repeat';\nimport { unsafeHTML } from 'lit-html-optimised/directives/unsafe-html';\nimport { until } from 'lit-html-optimised/directives/until';\nimport { live } from 'lit-html-optimised/directives/live';\nimport Detach from './Detach';\nimport StyleMap from './StyleMap';\nimport PointerAction from './PointerAction';\nimport getPublicComponentMethods from './PublicComponentMethods';\nimport getActionsCollector from './ActionsCollector';\nimport getInternalComponentMethods from './InternalComponentMethods';\nimport { schedule, clone } from './helpers';\nimport Action from './Action';\nimport { Slots } from './Slots';\nimport prepareGetElement from './GetElement';\nimport helpers from './helpers';\n\nimport * as lithtml from 'lit-html-optimised';\n\n/* dev imports\nimport { render, html, directive, svg, Part } from '../lit-html';\nimport { asyncAppend } from '../lit-html/directives/async-append';\nimport { asyncReplace } from '../lit-html/directives/async-replace';\nimport { cache } from '../lit-html/directives/cache';\nimport { classMap } from '../lit-html/directives/class-map';\nimport { guard } from '../lit-html/directives/guard';\nimport { ifDefined } from '../lit-html/directives/if-defined';\nimport { repeat } from '../lit-html/directives/repeat';\nimport { unsafeHTML } from '../lit-html/directives/unsafe-html';\nimport { until } from '../lit-html/directives/until';\nimport { Directive } from '../lit-html/lib/directive';\n*/\n\nexport type htmlResult =\n  | lithtml.TemplateResult\n  | lithtml.TemplateResult[]\n  | lithtml.SVGTemplateResult\n  | lithtml.SVGTemplateResult[]\n  | undefined\n  | null;\n\nexport type UpdateTemplate = (props: unknown) => htmlResult;\n\nexport type Component = (vido: AnyVido, props: unknown) => UpdateTemplate;\n\nexport interface ComponentInstance {\n  instance: string;\n  update: () => Promise<unknown>;\n  destroy: () => void;\n  change: (props: unknown, options?: any) => void;\n  html: (props?: unknown) => lithtml.TemplateResult;\n  vidoInstance: AnyVido;\n}\n\nexport interface CreateAppConfig {\n  element: HTMLElement;\n  component: Component;\n  props: unknown;\n}\n\nexport type Callback = () => void;\nexport type OnChangeCallback = (props: any, options: any) => void;\nexport type GetPropsFn = (arg: unknown) => unknown | any;\n\nexport interface vido<State, Api> {\n  instance: string;\n  name: string;\n  state: State;\n  api: Api;\n  html: (strings: TemplateStringsArray, ...values: unknown[]) => lithtml.TemplateResult;\n  svg: (strings: TemplateStringsArray, ...values: unknown[]) => lithtml.SVGTemplateResult;\n  onDestroy: (callback: Callback) => void;\n  onChange: (callback: OnChangeCallback) => void;\n  update: (callback?: any) => Promise<unknown>;\n  createComponent: (component: Component, props?: unknown, content?: unknown) => ComponentInstance;\n  createApp: (config: CreateAppConfig) => ComponentInstance;\n  reuseComponents: (\n    currentComponents: ComponentInstance[],\n    dataArray: unknown[],\n    getProps: GetPropsFn,\n    component: Component,\n    leaveTail?: boolean,\n    debug?: boolean\n  ) => void;\n  getElement: (callback: (element: Element) => void) => void;\n  directive: typeof directive;\n  asyncAppend: typeof asyncAppend;\n  asyncReplace: typeof asyncReplace;\n  cache: typeof cache;\n  classMap: typeof classMap;\n  guard: typeof guard;\n  live: typeof live;\n  ifDefined: typeof ifDefined;\n  repeat: typeof repeat;\n  unsafeHTML: typeof unsafeHTML;\n  until: typeof until;\n  schedule: typeof schedule;\n  StyleMap: typeof StyleMap;\n  Detach: typeof Detach;\n  PointerAction: typeof PointerAction;\n  Action: typeof Action;\n  Slots: typeof Slots;\n  Actions?: any;\n}\n\nexport type AnyVido = vido<any, any>;\n\nexport default function Vido<State, Api>(state: State, api: Api): vido<State, Api> {\n  let componentId = 0;\n  const components = new Map();\n  let actionsByInstance = new Map();\n  let app: string, element: HTMLElement;\n  let shouldUpdateCount = 0;\n  const afterUpdateCallbacks: (() => void)[] = [];\n  const resolved = Promise.resolve();\n  const additionalMethods = {};\n\n  const ActionsCollector = getActionsCollector(actionsByInstance);\n\n  class InstanceActionsCollector {\n    public instance: string;\n\n    constructor(instance: string) {\n      this.instance = instance;\n    }\n\n    public create(actions: unknown[], props: object) {\n      const actionsInstance = new ActionsCollector(this.instance);\n      actionsInstance.set(actions, props);\n      return actionsInstance;\n    }\n  }\n\n  const PublicComponentMethods = getPublicComponentMethods(components, actionsByInstance, clone);\n  const InternalComponentMethods = getInternalComponentMethods(components, actionsByInstance, clone);\n\n  class VidoInstance {\n    instance: string = '';\n    name: string = '';\n    Actions: InstanceActionsCollector;\n    destroyable: Callback[] = [];\n    destroyed = false;\n    onChangeFunctions: OnChangeCallback[] = [];\n    debug = false;\n    state = state as State;\n    api = api as Api;\n    lastProps = {};\n    html = html;\n    svg = svg;\n    directive = directive;\n    asyncAppend = asyncAppend;\n    asyncReplace = asyncReplace;\n    cache = cache;\n    classMap = classMap;\n    guard = guard;\n    live = live;\n    ifDefined = ifDefined;\n    repeat = repeat;\n    unsafeHTML = unsafeHTML;\n    until = until;\n    schedule = schedule;\n    getElement = prepareGetElement(directive);\n    actionsByInstance = (/* componentActions, props */) => {};\n    StyleMap = StyleMap;\n    Detach = Detach;\n    PointerAction = PointerAction;\n    Action = Action;\n    Slots = Slots;\n    _components = components;\n    _actions = actionsByInstance;\n\n    constructor(instance: string = '', name: string = '') {\n      this.instance = instance;\n      this.reuseComponents = this.reuseComponents.bind(this);\n      this.onDestroy = this.onDestroy.bind(this);\n      this.onChange = this.onChange.bind(this);\n      this.update = this.update.bind(this);\n      this.destroyComponent = this.destroyComponent.bind(this);\n      for (const name in additionalMethods) {\n        // @ts-ignore\n        this[name] = additionalMethods[name].bind(this);\n      }\n      this.name = name;\n      this.Actions = new InstanceActionsCollector(instance);\n    }\n\n    public static addMethod(name: string, body: (...args: unknown[]) => unknown) {\n      // @ts-ignore\n      additionalMethods[name] = body;\n    }\n\n    public onDestroy(fn: Callback) {\n      this.destroyable.push(fn);\n    }\n\n    public onChange(fn: OnChangeCallback) {\n      this.onChangeFunctions.push(fn);\n    }\n\n    public update(callback: Callback) {\n      return this.updateTemplate(callback);\n    }\n\n    /**\n     * Reuse existing components when your data was changed\n     *\n     * @param {array} currentComponents - array of components\n     * @param {array} dataArray  - any data as array for each component\n     * @param {function} getProps - you can pass params to component from array item ( example: item=>({id:item.id}) )\n     * @param {function} component - what kind of components do you want to create?\n     * @param {boolean} leaveTail - leave last elements and do not destroy corresponding components\n     * @param {boolean} debug - show debug info\n     * @returns {array} of components (with updated/destroyed/created ones)\n     */\n    public reuseComponents(\n      currentComponents: ComponentInstance[],\n      dataArray: unknown[],\n      getProps: GetPropsFn,\n      component: Component,\n      leaveTail = true,\n      debug = false\n    ) {\n      const modified = [];\n      const currentLen = currentComponents.length;\n      const dataLen = dataArray.length;\n      let leave = false;\n      if (leaveTail && (dataArray === undefined || dataArray.length === 0)) {\n        leave = true;\n      }\n      let leaveStartingAt = 0;\n      if (currentLen < dataLen) {\n        let diff = dataLen - currentLen;\n        while (diff) {\n          const item = dataArray[dataLen - diff];\n          const newComponent = this.createComponent(component, getProps(item));\n          currentComponents.push(newComponent);\n          modified.push(newComponent);\n          diff--;\n        }\n      } else if (currentLen > dataLen) {\n        let diff = currentLen - dataLen;\n        if (leaveTail) {\n          leave = true;\n          leaveStartingAt = currentLen - diff;\n        }\n        while (diff) {\n          const index = currentLen - diff;\n          if (!leaveTail) {\n            modified.push(currentComponents[index]);\n            currentComponents[index].destroy();\n          }\n          diff--;\n        }\n        if (!leaveTail) {\n          currentComponents.length = dataLen;\n        }\n      }\n      let index = 0;\n      if (debug) console.log('modified components', modified);\n      if (debug) console.log('current components', currentComponents);\n      if (debug) console.log('data array', dataArray);\n      for (const component of currentComponents) {\n        const data = dataArray[index];\n        if (debug) console.log(`reuse components data at '${index}'`, data);\n        if (component && !modified.includes(component)) {\n          if (debug) console.log('getProps fn result', getProps(data));\n          component.change(getProps(data), { leave: leave && index >= leaveStartingAt });\n        }\n        index++;\n      }\n    }\n\n    public createComponent(component: Component, props: unknown = {}): ComponentInstance {\n      const instance = component.name + ':' + componentId++;\n      let vidoInstance;\n      vidoInstance = new VidoInstance(instance, name);\n      const publicMethods = new PublicComponentMethods(instance, vidoInstance, props);\n      const internalMethods = new InternalComponentMethods(\n        instance,\n        vidoInstance,\n        component(vidoInstance as AnyVido, props)\n      );\n      components.set(instance, internalMethods);\n      components.get(instance).change(props);\n      if (vidoInstance.debug) {\n        console.groupCollapsed(`component created ${instance}`);\n        console.log(clone({ props, components: components.keys(), actionsByInstance }));\n        console.trace();\n        console.groupEnd();\n      }\n      return publicMethods;\n    }\n\n    public destroyComponent(instance: string, vidoInstance: VidoInstance) {\n      if (vidoInstance.debug) {\n        console.groupCollapsed(`destroying component ${instance}...`);\n        console.log(clone({ components: components.keys(), actionsByInstance }));\n        console.trace();\n        console.groupEnd();\n      }\n      if (actionsByInstance.has(instance)) {\n        for (const action of actionsByInstance.get(instance)) {\n          if (typeof action.componentAction.destroy === 'function') {\n            action.componentAction.destroy(action.element, action.props);\n          }\n        }\n      }\n      actionsByInstance.delete(instance);\n      const component = components.get(instance);\n      if (!component) {\n        console.warn(`No component to destroy! [${instance}]`);\n        return;\n      }\n      component.destroy();\n      components.delete(instance);\n      if (vidoInstance.debug) {\n        console.groupCollapsed(`component destroyed ${instance}`);\n        console.log(clone({ components: components.keys(), actionsByInstance }));\n        console.trace();\n        console.groupEnd();\n      }\n    }\n\n    private executeActions() {\n      for (const actions of actionsByInstance.values()) {\n        for (const action of actions) {\n          if (action.element.vido === undefined) {\n            const component = components.get(action.instance);\n            action.isActive = function isActive() {\n              return component && component.destroyed === false;\n            };\n            const componentAction = action.componentAction;\n            const create = componentAction.create;\n            if (typeof create !== 'undefined') {\n              let result;\n              if (\n                (create.prototype &&\n                  (create.prototype.isAction || create.prototype.update || create.prototype.destroy)) ||\n                create.isAction\n              ) {\n                result = new create(action.element, action.props);\n              } else {\n                result = create(action.element, action.props);\n              }\n              if (result !== undefined) {\n                if (typeof result === 'function') {\n                  componentAction.destroy = result;\n                } else {\n                  if (typeof result.update === 'function') {\n                    componentAction.update = result.update.bind(result);\n                  }\n                  if (typeof result.destroy === 'function') {\n                    componentAction.destroy = result.destroy.bind(result);\n                  }\n                }\n              }\n            }\n          } else {\n            action.element.vido = action.props;\n            if (typeof action.componentAction.update === 'function' && action.isActive()) {\n              action.componentAction.update(action.element, action.props);\n            }\n          }\n        }\n        for (const action of actions) {\n          action.element.vido = action.props;\n        }\n      }\n    }\n\n    private updateTemplate(callback: (() => void) | undefined = undefined) {\n      if (callback) afterUpdateCallbacks.push(callback);\n      return new Promise((resolve) => {\n        const currentShouldUpdateCount = ++shouldUpdateCount;\n        const self = this;\n        function flush() {\n          if (currentShouldUpdateCount === shouldUpdateCount) {\n            shouldUpdateCount = 0;\n            self.render();\n            for (const cb of afterUpdateCallbacks) {\n              cb();\n            }\n            afterUpdateCallbacks.length = 0;\n            resolve();\n          }\n        }\n        resolved.then(flush);\n      });\n    }\n\n    public createApp(config: CreateAppConfig): ComponentInstance {\n      element = config.element;\n      const App = this.createComponent(config.component, config.props);\n      app = App.instance;\n      this.render();\n      return App;\n    }\n\n    public render(): void {\n      const appComponent = components.get(app);\n      if (appComponent) {\n        render(appComponent.update(), element);\n        this.executeActions();\n      } else if (element) {\n        element.remove();\n      }\n    }\n  }\n\n  return new VidoInstance();\n}\n\nVido.prototype.lithtml = lithtml;\nVido.prototype.Action = Action;\nVido.prototype.Directive = Directive;\nVido.prototype.schedule = schedule;\nVido.prototype.Detach = Detach;\nVido.prototype.StyleMap = StyleMap;\nVido.prototype.PointerAction = PointerAction;\nVido.prototype.asyncAppend = asyncAppend;\nVido.prototype.asyncReplace = asyncReplace;\nVido.prototype.cache = cache;\nVido.prototype.classMap = classMap;\nVido.prototype.guard = guard;\nVido.prototype.live = live;\nVido.prototype.ifDefined = ifDefined;\nVido.prototype.repeat = repeat;\nVido.prototype.unsafeHTML = unsafeHTML;\nVido.prototype.until = until;\nVido.prototype.Slots = Slots;\n\nexport {\n  lithtml,\n  Action,\n  Directive,\n  schedule,\n  Detach,\n  StyleMap,\n  PointerAction,\n  asyncAppend,\n  asyncReplace,\n  cache,\n  classMap,\n  guard,\n  ifDefined,\n  repeat,\n  unsafeHTML,\n  until,\n  Slots,\n  helpers,\n};\n"],"names":["this","__asyncValues","templateCaches","previousValues","emptyTemplateNode"],"mappings":";;;;;;IAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,MAAM,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,KAAK;IAC9C,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACzB;IACA,IAAI,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC;IACzB,IAAI,OAAO,CAAC,CAAC;IACb,CAAC,CAAC,CAAC;IACI,MAAM,SAAS,CAAC;IACvB,IAAI,WAAW,GAAG;IAClB,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAChC,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAC5B,KAAK;IACL,IAAI,IAAI,CAAC,KAAK,EAAE;IAChB;IACA,KAAK;IACL,CAAC;IACM,MAAM,WAAW,GAAG,CAAC,CAAC,KAAK;IAClC,IAAI,QAAQ,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,IAAI;IACzC;IACA,QAAQ,OAAO,CAAC,CAAC,WAAW,KAAK,SAAS,EAAE;IAC5C,CAAC;;ICxED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,YAAY,GAAG,OAAO,MAAM,KAAK,WAAW;IACzD,IAAI,MAAM,CAAC,cAAc,IAAI,IAAI;IACjC,IAAI,MAAM,CAAC,cAAc,CAAC,yBAAyB;IACnD,QAAQ,SAAS,CAAC;IAClB;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,aAAa,GAAG,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG,GAAG,IAAI,EAAE,MAAM,GAAG,IAAI,KAAK;IAC9E,IAAI,OAAO,KAAK,KAAK,GAAG,EAAE;IAC1B,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC;IACpC,QAAQ,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC9C,QAAQ,KAAK,GAAG,CAAC,CAAC;IAClB,KAAK;IACL,CAAC,CAAC;IACF;IACA;IACA;IACA;AACA,IAAO,MAAM,WAAW,GAAG,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG,GAAG,IAAI,KAAK;IAC7D,IAAI,OAAO,KAAK,KAAK,GAAG,EAAE;IAC1B,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC;IACpC,QAAQ,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACrC,QAAQ,KAAK,GAAG,CAAC,CAAC;IAClB,KAAK;IACL,CAAC,CAAC;;IC1CF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,QAAQ,GAAG,EAAE,CAAC;IAC3B;IACA;IACA;AACA,IAAO,MAAM,OAAO,GAAG,EAAE,CAAC;;ICrB1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE;IACA;IACA;IACA;AACA,IAAO,MAAM,UAAU,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;AAC7C,IAAO,MAAM,WAAW,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;IACjE;IACA;IACA;AACA,IAAO,MAAM,oBAAoB,GAAG,OAAO,CAAC;IAC5C;IACA;IACA;AACA,IAAO,MAAM,QAAQ,CAAC;IACtB,IAAI,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE;IACjC,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACxB,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,QAAQ,MAAM,aAAa,GAAG,EAAE,CAAC;IACjC,QAAQ,MAAM,KAAK,GAAG,EAAE,CAAC;IACzB;IACA,QAAQ,MAAM,MAAM,GAAG,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,+CAA+C,IAAI,EAAE,KAAK,CAAC,CAAC;IACjI;IACA;IACA;IACA,QAAQ,IAAI,aAAa,GAAG,CAAC,CAAC;IAC9B,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;IACvB,QAAQ,IAAI,SAAS,GAAG,CAAC,CAAC;IAC1B,QAAQ,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,EAAE,GAAG,MAAM,CAAC;IACvD,QAAQ,OAAO,SAAS,GAAG,MAAM,EAAE;IACnC,YAAY,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC3C,YAAY,IAAI,IAAI,KAAK,IAAI,EAAE;IAC/B;IACA;IACA;IACA;IACA,gBAAgB,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACjD,gBAAgB,SAAS;IACzB,aAAa;IACb,YAAY,KAAK,EAAE,CAAC;IACpB,YAAY,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,0BAA0B;IAC7D,gBAAgB,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;IAC1C,oBAAoB,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IACvD,oBAAoB,MAAM,EAAE,MAAM,EAAE,GAAG,UAAU,CAAC;IAClD;IACA;IACA;IACA;IACA;IACA,oBAAoB,IAAI,KAAK,GAAG,CAAC,CAAC;IAClC,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;IACrD,wBAAwB,IAAI,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,oBAAoB,CAAC,EAAE;IAChF,4BAA4B,KAAK,EAAE,CAAC;IACpC,yBAAyB;IACzB,qBAAqB;IACrB,oBAAoB,OAAO,KAAK,EAAE,GAAG,CAAC,EAAE;IACxC;IACA;IACA,wBAAwB,MAAM,aAAa,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACjE;IACA,wBAAwB,MAAM,IAAI,GAAG,sBAAsB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IACnF;IACA;IACA;IACA;IACA;IACA,wBAAwB,MAAM,mBAAmB,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,oBAAoB,CAAC;IAC9F,wBAAwB,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;IACtF,wBAAwB,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC;IAClE,wBAAwB,MAAM,OAAO,GAAG,cAAc,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC1E,wBAAwB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC9F,wBAAwB,SAAS,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IACxD,qBAAqB;IACrB,iBAAiB;IACjB,gBAAgB,IAAI,IAAI,CAAC,OAAO,KAAK,UAAU,EAAE;IACjD,oBAAoB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,oBAAoB,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;IACtD,iBAAiB;IACjB,aAAa;IACb,iBAAiB,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,uBAAuB;IAC/D,gBAAgB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACvC,gBAAgB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;IAC/C,oBAAoB,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;IACnD,oBAAoB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC5D,oBAAoB,MAAM,SAAS,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IACzD;IACA;IACA,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;IACxD,wBAAwB,IAAI,MAAM,CAAC;IACnC,wBAAwB,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC3C,wBAAwB,IAAI,CAAC,KAAK,EAAE,EAAE;IACtC,4BAA4B,MAAM,GAAG,YAAY,EAAE,CAAC;IACpD,yBAAyB;IACzB,6BAA6B;IAC7B,4BAA4B,MAAM,KAAK,GAAG,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzE,4BAA4B,IAAI,KAAK,KAAK,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,oBAAoB,CAAC,EAAE;IAC5F,gCAAgC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IACtE,oCAAoC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,oBAAoB,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/F,6BAA6B;IAC7B,4BAA4B,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IAChE,yBAAyB;IACzB,wBAAwB,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC1D,wBAAwB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1E,qBAAqB;IACrB;IACA;IACA,oBAAoB,IAAI,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE;IACnD,wBAAwB,MAAM,CAAC,YAAY,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,CAAC;IAClE,wBAAwB,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjD,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACvD,qBAAqB;IACrB;IACA,oBAAoB,SAAS,IAAI,SAAS,CAAC;IAC3C,iBAAiB;IACjB,aAAa;IACb,iBAAiB,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,0BAA0B;IAClE,gBAAgB,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;IAC1C,oBAAoB,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;IACnD;IACA;IACA;IACA;IACA,oBAAoB,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,IAAI,KAAK,KAAK,aAAa,EAAE;IAClF,wBAAwB,KAAK,EAAE,CAAC;IAChC,wBAAwB,MAAM,CAAC,YAAY,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,CAAC;IAClE,qBAAqB;IACrB,oBAAoB,aAAa,GAAG,KAAK,CAAC;IAC1C,oBAAoB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IAC7D;IACA;IACA,oBAAoB,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;IACnD,wBAAwB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACvC,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjD,wBAAwB,KAAK,EAAE,CAAC;IAChC,qBAAqB;IACrB,oBAAoB,SAAS,EAAE,CAAC;IAChC,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/B,oBAAoB,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE;IAC1E;IACA;IACA;IACA;IACA,wBAAwB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrE,wBAAwB,SAAS,EAAE,CAAC;IACpC,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT;IACA,QAAQ,KAAK,MAAM,CAAC,IAAI,aAAa,EAAE;IACvC,YAAY,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACxC,SAAS;IACT,KAAK;IACL,CAAC;IACD,MAAM,QAAQ,GAAG,CAAC,GAAG,EAAE,MAAM,KAAK;IAClC,IAAI,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC7C,IAAI,OAAO,KAAK,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC;IACrD,CAAC,CAAC;AACF,IAAO,MAAM,oBAAoB,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;IAChE;IACA;IACA;IACA;IACA,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IAC9C;IACA;AACA,IAAO,MAAM,YAAY,GAAG,MAAM,UAAU,CAAC,SAAS,EAAE,CAAC;IACzD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,sBAAsB;IACnC;IACA,4IAA4I,CAAC;;IC1N7I;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAEA;IACA;IACA;IACA;AACA,IAAO,MAAM,gBAAgB,CAAC;IAC9B,IAAI,WAAW,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE;IAC9C,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IAC1B,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACjC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IACnC,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,KAAK;IACL,IAAI,MAAM,CAAC,MAAM,EAAE;IACnB,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;IAClB,QAAQ,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;IACzC,YAAY,IAAI,IAAI,KAAK,SAAS,EAAE;IACpC,gBAAgB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,aAAa;IACb,YAAY,CAAC,EAAE,CAAC;IAChB,SAAS;IACT,QAAQ,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;IACzC,YAAY,IAAI,IAAI,KAAK,SAAS,EAAE;IACpC,gBAAgB,IAAI,CAAC,MAAM,EAAE,CAAC;IAC9B,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,MAAM,GAAG;IACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,MAAM,QAAQ,GAAG,YAAY;IACrC,YAAY,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC;IACzD,YAAY,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACrE,QAAQ,MAAM,KAAK,GAAG,EAAE,CAAC;IACzB,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IAC1C;IACA,QAAQ,MAAM,MAAM,GAAG,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,+CAA+C,IAAI,EAAE,KAAK,CAAC,CAAC;IAC1H,QAAQ,IAAI,SAAS,GAAG,CAAC,CAAC;IAC1B,QAAQ,IAAI,SAAS,GAAG,CAAC,CAAC;IAC1B,QAAQ,IAAI,IAAI,CAAC;IACjB,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IACrC;IACA,QAAQ,OAAO,SAAS,GAAG,KAAK,CAAC,MAAM,EAAE;IACzC,YAAY,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;IACpC,YAAY,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE;IAC7C,gBAAgB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7C,gBAAgB,SAAS,EAAE,CAAC;IAC5B,gBAAgB,SAAS;IACzB,aAAa;IACb;IACA;IACA;IACA,YAAY,OAAO,SAAS,GAAG,IAAI,CAAC,KAAK,EAAE;IAC3C,gBAAgB,SAAS,EAAE,CAAC;IAC5B,gBAAgB,IAAI,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;IAClD,oBAAoB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,oBAAoB,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;IACtD,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,EAAE,MAAM,IAAI,EAAE;IACzD;IACA;IACA;IACA;IACA,oBAAoB,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACrD,oBAAoB,IAAI,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7C,iBAAiB;IACjB,aAAa;IACb;IACA,YAAY,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;IACtC,gBAAgB,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/E,gBAAgB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC3D,gBAAgB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,0BAA0B,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7H,aAAa;IACb,YAAY,SAAS,EAAE,CAAC;IACxB,SAAS;IACT,QAAQ,IAAI,YAAY,EAAE;IAC1B,YAAY,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACzC,YAAY,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC7C,SAAS;IACT,QAAQ,OAAO,QAAQ,CAAC;IACxB,KAAK;IACL,CAAC;;ICpID;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,MAAM,GAAG,MAAM,CAAC,YAAY;IAClC,IAAI,YAAY,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACpE,MAAM,aAAa,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IACpC;IACA;IACA;IACA;IACA,MAAM,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IAC7D;IACA;IACA;IACA;AACA,IAAO,MAAM,cAAc,CAAC;IAC5B,IAAI,WAAW,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE;IAClD,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAC7B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IACnC,KAAK;IACL;IACA;IACA;IACA,IAAI,OAAO,GAAG;IACd,QAAQ,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1C,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC;IACtB,QAAQ,IAAI,gBAAgB,GAAG,KAAK,CAAC;IACrC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpC,YAAY,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,YAAY,MAAM,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACtD;IACA;IACA;IACA,YAAY,gBAAgB,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,gBAAgB;IACpE,gBAAgB,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACzD;IACA;IACA;IACA,YAAY,MAAM,cAAc,GAAG,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClE,YAAY,IAAI,cAAc,KAAK,IAAI,EAAE;IACzC;IACA;IACA;IACA;IACA;IACA,gBAAgB,IAAI,IAAI,CAAC,IAAI,gBAAgB,GAAG,aAAa,GAAG,UAAU,CAAC,CAAC;IAC5E,aAAa;IACb,iBAAiB;IACjB;IACA;IACA;IACA,gBAAgB,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,cAAc,CAAC,KAAK,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC;IAC7E,oBAAoB,cAAc,CAAC,CAAC,CAAC,GAAG,oBAAoB,GAAG,cAAc,CAAC,CAAC,CAAC;IAChF,oBAAoB,MAAM,CAAC;IAC3B,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAChC,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,kBAAkB,GAAG;IACzB,QAAQ,MAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,EAAE,CAAC;IACvD,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IACnC,QAAQ,IAAI,MAAM,KAAK,SAAS,EAAE;IAClC;IACA;IACA;IACA;IACA,YAAY,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC7C,SAAS;IACT,QAAQ,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;IACnC,QAAQ,OAAO,QAAQ,CAAC;IACxB,KAAK;IACL,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,iBAAiB,SAAS,cAAc,CAAC;IACtD,IAAI,OAAO,GAAG;IACd,QAAQ,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC;IAC/C,KAAK;IACL,IAAI,kBAAkB,GAAG;IACzB,QAAQ,MAAM,QAAQ,GAAG,KAAK,CAAC,kBAAkB,EAAE,CAAC;IACpD,QAAQ,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;IACzC,QAAQ,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;IAC9C,QAAQ,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IACxC,QAAQ,aAAa,CAAC,OAAO,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;IACtD,QAAQ,OAAO,QAAQ,CAAC;IACxB,KAAK;IACL,CAAC;;ICtID;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAMO,MAAM,WAAW,GAAG,CAAC,KAAK,KAAK;IACtC,IAAI,QAAQ,KAAK,KAAK,IAAI;IAC1B,QAAQ,EAAE,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,UAAU,CAAC,EAAE;IACrE,CAAC,CAAC;AACF,IAAO,MAAM,UAAU,GAAG,CAAC,KAAK,KAAK;IACrC,IAAI,QAAQ,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;IAChC;IACA,QAAQ,CAAC,EAAE,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE;IAC7C,CAAC,CAAC;IACF;IACA;IACA;IACA,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IAClD;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,kBAAkB,CAAC;IAChC,IAAI,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;IACxC,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAC1B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACrD,YAAY,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAC/C,SAAS;IACT,KAAK;IACL;IACA;IACA;IACA,IAAI,WAAW,GAAG;IAClB,QAAQ,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC;IACvC,KAAK;IACL,IAAI,SAAS,GAAG;IAChB,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IACrC,QAAQ,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IACrC,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACjC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;IAC/D,YAAY,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACrC,YAAY,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;IACvC,gBAAgB,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;IACjC,aAAa;IACb,YAAY,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;IACzD,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC;IACtB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpC,YAAY,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/B,YAAY,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAClC,YAAY,IAAI,IAAI,KAAK,SAAS,EAAE;IACpC,gBAAgB,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;IACrC,gBAAgB,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;IACtD,oBAAoB,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAClE,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE;IACvC,wBAAwB,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACtE,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IAC3B,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,MAAM,GAAG;IACb,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;IACxB,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC/B,YAAY,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnE,SAAS;IACT,KAAK;IACL,CAAC;IACD;IACA;IACA;AACA,IAAO,MAAM,aAAa,CAAC;IAC3B,IAAI,WAAW,CAAC,SAAS,EAAE;IAC3B,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IAC/B,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IACnC,KAAK;IACL,IAAI,QAAQ,CAAC,KAAK,EAAE;IACpB,QAAQ,IAAI,KAAK,KAAK,QAAQ,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE;IACjF,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC/B;IACA;IACA;IACA,YAAY,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;IACrC,gBAAgB,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;IAC5C,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,MAAM,GAAG;IACb,QAAQ,OAAO,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACxC,YAAY,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;IACzC,YAAY,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;IAClC;IACA,YAAY,IAAI,SAAS,CAAC,OAAO,EAAE;IACnC;IACA,gBAAgB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,aAAa;IACb,iBAAiB;IACjB,gBAAgB,SAAS,CAAC,IAAI,CAAC,CAAC;IAChC,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE;IACrC,YAAY,OAAO;IACnB,SAAS;IACT,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;IAChC,KAAK;IACL,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,QAAQ,CAAC;IACtB,IAAI,WAAW,CAAC,OAAO,EAAE;IACzB,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IAC/B,QAAQ,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;IACxC,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,KAAK;IACL;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,SAAS,EAAE;IAC1B,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC;IAC/D,QAAQ,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC;IAC7D,KAAK;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,eAAe,CAAC,GAAG,EAAE;IACzB,QAAQ,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;IAC7B,QAAQ,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,WAAW,CAAC;IACvC,KAAK;IACL;IACA;IACA;IACA;IACA;IACA,IAAI,cAAc,CAAC,IAAI,EAAE;IACzB,QAAQ,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,GAAG,YAAY,EAAE,EAAE,CAAC;IACzD,QAAQ,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,GAAG,YAAY,EAAE,EAAE,CAAC;IACvD,KAAK;IACL;IACA;IACA;IACA;IACA;IACA,IAAI,eAAe,CAAC,GAAG,EAAE;IACzB,QAAQ,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,GAAG,YAAY,EAAE,EAAE,CAAC;IACxD,QAAQ,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;IACnC,QAAQ,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;IACrC,KAAK;IACL,IAAI,QAAQ,CAAC,KAAK,EAAE;IACpB,QAAQ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IACpC,KAAK;IACL,IAAI,MAAM,GAAG;IACb,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,KAAK,IAAI,EAAE;IAChD,YAAY,OAAO;IACnB,SAAS;IACT,QAAQ,OAAO,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;IACjD,YAAY,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;IAClD,YAAY,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;IAC3C;IACA,YAAY,IAAI,SAAS,CAAC,OAAO,EAAE;IACnC;IACA,gBAAgB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,aAAa;IACb,iBAAiB;IACjB,gBAAgB,SAAS,CAAC,IAAI,CAAC,CAAC;IAChC,aAAa;IACb,SAAS;IACT,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;IAC1C,QAAQ,IAAI,KAAK,KAAK,QAAQ,EAAE;IAChC,YAAY,OAAO;IACnB,SAAS;IACT,QAAQ,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;IAChC,YAAY,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;IACtC,gBAAgB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IACzC,aAAa;IACb,SAAS;IACT,aAAa,IAAI,KAAK,YAAY,cAAc,EAAE;IAClD,YAAY,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAC/C,SAAS;IACT,aAAa,IAAI,KAAK,YAAY,IAAI,EAAE;IACxC,YAAY,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IACrC,SAAS;IACT,aAAa,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;IACpC,YAAY,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACzC,SAAS;IACT,aAAa,IAAI,KAAK,KAAK,OAAO,EAAE;IACpC,YAAY,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;IACjC,YAAY,IAAI,CAAC,KAAK,EAAE,CAAC;IACzB,SAAS;IACT,aAAa;IACb;IACA,YAAY,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IACrC,SAAS;IACT,KAAK;IACL,IAAI,QAAQ,CAAC,IAAI,EAAE;IACnB,QAAQ,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACjE,KAAK;IACL,IAAI,YAAY,CAAC,KAAK,EAAE;IACxB,QAAQ,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;IAClC,YAAY,OAAO;IACnB,SAAS;IACT,QAAQ,IAAI,CAAC,KAAK,EAAE,CAAC;IACrB,QAAQ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC7B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC3B,KAAK;IACL,IAAI,YAAY,CAAC,KAAK,EAAE;IACxB,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;IAChD,QAAQ,KAAK,GAAG,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC;IAC3C;IACA;IACA,QAAQ,MAAM,aAAa,GAAG,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAChF,QAAQ,IAAI,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,eAAe;IACjD,YAAY,IAAI,CAAC,QAAQ,KAAK,CAAC,uBAAuB;IACtD;IACA;IACA;IACA,YAAY,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;IACtC,SAAS;IACT,aAAa;IACb,YAAY,MAAM,QAAQ,GAAG,aAAa,CAAC,SAAS,EAAE,CAAC;IACvD,YAAY,QAAQ,CAAC,WAAW,GAAG,aAAa,CAAC;IACjD,YAAY,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IACxC,SAAS;IACT,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC3B,KAAK;IACL,IAAI,sBAAsB,CAAC,KAAK,EAAE;IAClC,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC7D,QAAQ,IAAI,IAAI,CAAC,KAAK,YAAY,gBAAgB;IAClD,YAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,QAAQ,EAAE;IAC9C,YAAY,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC5C,SAAS;IACT,aAAa;IACb;IACA;IACA;IACA;IACA,YAAY,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,QAAQ,EAAE,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3F,YAAY,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC/C,YAAY,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC1C,YAAY,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IACxC,YAAY,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;IAClC,SAAS;IACT,KAAK;IACL,IAAI,gBAAgB,CAAC,KAAK,EAAE;IAC5B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACxC,YAAY,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAC5B,YAAY,IAAI,CAAC,KAAK,EAAE,CAAC;IACzB,SAAS;IACT;IACA;IACA,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;IACrC,QAAQ,IAAI,SAAS,GAAG,CAAC,CAAC;IAC1B,QAAQ,IAAI,QAAQ,CAAC;IACrB,QAAQ,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;IAClC;IACA,YAAY,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;IAC5C;IACA,YAAY,IAAI,QAAQ,KAAK,SAAS,EAAE;IACxC,gBAAgB,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtD,gBAAgB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzC,gBAAgB,IAAI,SAAS,KAAK,CAAC,EAAE;IACrC,oBAAoB,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAClD,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;IACvE,iBAAiB;IACjB,aAAa;IACb,YAAY,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACpC,YAAY,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC9B,YAAY,SAAS,EAAE,CAAC;IACxB,SAAS;IACT,QAAQ,IAAI,SAAS,GAAG,SAAS,CAAC,MAAM,EAAE;IAC1C;IACA,YAAY,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC;IACzC,YAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;IACrD,SAAS;IACT,KAAK;IACL,IAAI,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE;IACtC,QAAQ,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACpF,KAAK;IACL,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,oBAAoB,CAAC;IAClC,IAAI,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;IACxC,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IAC/B,QAAQ,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;IACxC,QAAQ,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;IAC5E,YAAY,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;IACvF,SAAS;IACT,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,KAAK;IACL,IAAI,QAAQ,CAAC,KAAK,EAAE;IACpB,QAAQ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IACpC,KAAK;IACL,IAAI,MAAM,GAAG;IACb,QAAQ,OAAO,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;IACjD,YAAY,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;IAClD,YAAY,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;IAC3C;IACA,YAAY,IAAI,SAAS,CAAC,OAAO,EAAE;IACnC;IACA,gBAAgB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,aAAa;IACb,iBAAiB;IACjB,gBAAgB,SAAS,CAAC,IAAI,CAAC,CAAC;IAChC,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,cAAc,KAAK,QAAQ,EAAE;IAC9C,YAAY,OAAO;IACnB,SAAS;IACT,QAAQ,MAAM,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;IAC5C,QAAQ,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;IAClC,YAAY,IAAI,KAAK,EAAE;IACvB,gBAAgB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IACzD,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxD,aAAa;IACb,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC/B,SAAS;IACT,QAAQ,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;IACvC,KAAK;IACL,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,iBAAiB,SAAS,kBAAkB,CAAC;IAC1D,IAAI,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;IACxC,QAAQ,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACtC,QAAQ,IAAI,CAAC,MAAM;IACnB,YAAY,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC3E,KAAK;IACL,IAAI,WAAW,GAAG;IAClB,QAAQ,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;IACtC,KAAK;IACL,IAAI,SAAS,GAAG;IAChB,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;IACzB,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACvC,SAAS;IACT,QAAQ,OAAO,KAAK,CAAC,SAAS,EAAE,CAAC;IACjC,KAAK;IACL,IAAI,MAAM,GAAG;IACb,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;IACxB,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC/B;IACA,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;IACvD,SAAS;IACT,KAAK;IACL,CAAC;AACD,IAAO,MAAM,YAAY,SAAS,aAAa,CAAC;IAChD,CAAC;IACD;IACA;IACA;IACA;IACA,IAAI,qBAAqB,GAAG,KAAK,CAAC;IAClC;IACA;IACA,CAAC,MAAM;IACP,IAAI,IAAI;IACR,QAAQ,MAAM,OAAO,GAAG;IACxB,YAAY,IAAI,OAAO,GAAG;IAC1B,gBAAgB,qBAAqB,GAAG,IAAI,CAAC;IAC7C,gBAAgB,OAAO,KAAK,CAAC;IAC7B,aAAa;IACb,SAAS,CAAC;IACV;IACA,QAAQ,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IAC1D;IACA,QAAQ,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IAC7D;IACA,KAAK;IACL,IAAI,OAAO,EAAE,EAAE;IACf;IACA,KAAK;IACL,CAAC,GAAG,CAAC;AACL,IAAO,MAAM,SAAS,CAAC;IACvB,IAAI,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE;IAClD,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IAC/B,QAAQ,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;IACxC,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IACnC,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACzC,QAAQ,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7D,KAAK;IACL,IAAI,QAAQ,CAAC,KAAK,EAAE;IACpB,QAAQ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IACpC,KAAK;IACL,IAAI,MAAM,GAAG;IACb,QAAQ,OAAO,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;IACjD,YAAY,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;IAClD,YAAY,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;IAC3C;IACA,YAAY,IAAI,SAAS,CAAC,OAAO,EAAE;IACnC;IACA,gBAAgB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,aAAa;IACb,iBAAiB;IACjB,gBAAgB,SAAS,CAAC,IAAI,CAAC,CAAC;IAChC,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,cAAc,KAAK,QAAQ,EAAE;IAC9C,YAAY,OAAO;IACnB,SAAS;IACT,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC;IAChD,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;IACvC,QAAQ,MAAM,oBAAoB,GAAG,WAAW,IAAI,IAAI;IACxD,aAAa,WAAW,IAAI,IAAI;IAChC,iBAAiB,WAAW,CAAC,OAAO,KAAK,WAAW,CAAC,OAAO;IAC5D,oBAAoB,WAAW,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI;IACzD,oBAAoB,WAAW,CAAC,OAAO,KAAK,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;IAClE,QAAQ,MAAM,iBAAiB,GAAG,WAAW,IAAI,IAAI,KAAK,WAAW,IAAI,IAAI,IAAI,oBAAoB,CAAC,CAAC;IACvG,QAAQ,IAAI,oBAAoB,EAAE;IAClC,YAAY,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACtG,SAAS;IACT,QAAQ,IAAI,iBAAiB,EAAE;IAC/B,YAAY,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;IACrD,YAAY,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACnG,SAAS;IACT,QAAQ,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;IACjC,QAAQ,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;IACvC,KAAK;IACL,IAAI,WAAW,CAAC,KAAK,EAAE;IACvB,QAAQ,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,UAAU,EAAE;IAC9C,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACtE,SAAS;IACT,aAAa;IACb,YAAY,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC1C,SAAS;IACT,KAAK;IACL,CAAC;IACD;IACA;IACA;IACA,MAAM,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC;IAC3B,KAAK,qBAAqB;IAC1B,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE;IAChE,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;IC7fnB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IACA;IACA;IACA;AACA,IAAO,MAAM,wBAAwB,CAAC;IACtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,0BAA0B,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;IAChE,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,QAAQ,IAAI,MAAM,KAAK,GAAG,EAAE;IAC5B,YAAY,MAAM,SAAS,GAAG,IAAI,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IACrF,YAAY,OAAO,SAAS,CAAC,KAAK,CAAC;IACnC,SAAS;IACT,QAAQ,IAAI,MAAM,KAAK,GAAG,EAAE;IAC5B,YAAY,OAAO,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;IACjF,SAAS;IACT,QAAQ,IAAI,MAAM,KAAK,GAAG,EAAE;IAC5B,YAAY,OAAO,CAAC,IAAI,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;IAC/E,SAAS;IACT,QAAQ,MAAM,SAAS,GAAG,IAAI,kBAAkB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACzE,QAAQ,OAAO,SAAS,CAAC,KAAK,CAAC;IAC/B,KAAK;IACL;IACA;IACA;IACA;IACA,IAAI,oBAAoB,CAAC,OAAO,EAAE;IAClC,QAAQ,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;IACrC,KAAK;IACL,CAAC;AACD,IAAO,MAAM,wBAAwB,GAAG,IAAI,wBAAwB,EAAE,CAAC;;IClDvE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IACA;IACA;IACA;IACA;AACA,IAAO,SAAS,eAAe,CAAC,MAAM,EAAE;IACxC,IAAI,IAAI,aAAa,GAAG,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACxD,IAAI,IAAI,aAAa,KAAK,SAAS,EAAE;IACrC,QAAQ,aAAa,GAAG;IACxB,YAAY,YAAY,EAAE,IAAI,OAAO,EAAE;IACvC,YAAY,SAAS,EAAE,IAAI,GAAG,EAAE;IAChC,SAAS,CAAC;IACV,QAAQ,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IACvD,KAAK;IACL,IAAI,IAAI,QAAQ,GAAG,aAAa,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAClE,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;IAChC,QAAQ,OAAO,QAAQ,CAAC;IACxB,KAAK;IACL;IACA;IACA,IAAI,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C;IACA,IAAI,QAAQ,GAAG,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAChD,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;IAChC;IACA,QAAQ,QAAQ,GAAG,IAAI,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,kBAAkB,EAAE,CAAC,CAAC;IACrE;IACA,QAAQ,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACnD,KAAK;IACL;IACA,IAAI,aAAa,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC7D,IAAI,OAAO,QAAQ,CAAC;IACpB,CAAC;AACD,IAAO,MAAM,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;;IC9CxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAGO,MAAM,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC;IACnC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,KAAK;IACtD,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACpC,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;IAC5B,QAAQ,WAAW,CAAC,SAAS,EAAE,SAAS,CAAC,UAAU,CAAC,CAAC;IACrD,QAAQ,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,eAAe,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/F,QAAQ,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IACnC,KAAK;IACL,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC1B,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC,CAAC;;ICzCF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IA6BA;IACA;IACA;IACA,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;IACnC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAClF,CAAC;IACD;IACA;IACA;IACA;AACA,IAAO,MAAM,IAAI,GAAG,CAAC,OAAO,EAAE,GAAG,MAAM,KAAK,IAAI,cAAc,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,wBAAwB,CAAC,CAAC;IAClH;IACA;IACA;IACA;AACA,IAAO,MAAM,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,MAAM,KAAK,IAAI,iBAAiB,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,wBAAwB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICzDnH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,aAAa,GAAG,CAACA,SAAI,IAAIA,SAAI,CAAC,aAAa,KAAK,UAAU,CAAC,EAAE;IACjE,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;IAC3F,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACvC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACrN,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;IACpK,IAAI,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;IAChI,CAAC,CAAC;AACF,IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,WAAW,GAAG,SAAS,CAAC,CAAC,KAAK,EAAE,MAAM,KAAK,OAAO,IAAI,KAAK;IACxE,IAAI,IAAI,GAAG,EAAE,EAAE,CAAC;IAChB,IAAI,IAAI,EAAE,IAAI,YAAY,QAAQ,CAAC,EAAE;IACrC,QAAQ,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;IACzE,KAAK;IACL;IACA;IACA,IAAI,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;IAC9B,QAAQ,OAAO;IACf,KAAK;IACL,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB;IACA;IACA,IAAI,IAAI,QAAQ,CAAC;IACjB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,IAAI;IACR,QAAQ,KAAK,IAAI,OAAO,GAAG,aAAa,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,SAAS,GAAG,MAAM,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG;IAChH,YAAY,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC;IACpC;IACA;IACA,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;IACtC,gBAAgB,MAAM;IACtB,aAAa;IACb;IACA;IACA,YAAY,IAAI,CAAC,KAAK,CAAC,EAAE;IACzB,gBAAgB,IAAI,CAAC,KAAK,EAAE,CAAC;IAC7B,aAAa;IACb;IACA;IACA;IACA;IACA,YAAY,IAAI,MAAM,KAAK,SAAS,EAAE;IACtC;IACA;IACA,gBAAgB,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,aAAa;IACb;IACA;IACA;IACA;IACA;IACA;IACA,YAAY,IAAI,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;IAC/C;IACA,YAAY,IAAI,QAAQ,KAAK,SAAS,EAAE;IACxC;IACA,gBAAgB,aAAa,GAAG,YAAY,EAAE,CAAC;IAC/C;IACA;IACA;IACA,gBAAgB,QAAQ,CAAC,OAAO,GAAG,aAAa,CAAC;IACjD,gBAAgB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAClF,aAAa;IACb,YAAY,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClD,YAAY,QAAQ,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;IACpD,YAAY,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACjC,YAAY,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC9B,YAAY,CAAC,EAAE,CAAC;IAChB,SAAS;IACT,KAAK;IACL,IAAI,OAAO,KAAK,EAAE,EAAE,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;IAC7C,YAAY;IACZ,QAAQ,IAAI;IACZ,YAAY,IAAI,SAAS,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9F,SAAS;IACT,gBAAgB,EAAE,IAAI,GAAG,EAAE,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IAC7C,KAAK;IACL,CAAC,CAAC,CAAC;;IC1GH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAIC,eAAa,GAAG,CAACD,SAAI,IAAIA,SAAI,CAAC,aAAa,KAAK,UAAU,CAAC,EAAE;IACjE,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;IAC3F,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACvC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACrN,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;IACpK,IAAI,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;IAChI,CAAC,CAAC;AACF,IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,YAAY,GAAG,SAAS,CAAC,CAAC,KAAK,EAAE,MAAM,KAAK,OAAO,IAAI,KAAK;IACzE,IAAI,IAAI,GAAG,EAAE,EAAE,CAAC;IAChB,IAAI,IAAI,EAAE,IAAI,YAAY,QAAQ,CAAC,EAAE;IACrC,QAAQ,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;IAC1E,KAAK;IACL;IACA;IACA,IAAI,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;IAC9B,QAAQ,OAAO;IACf,KAAK;IACL;IACA;IACA,IAAI,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChD,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,IAAI;IACR,QAAQ,KAAK,IAAI,OAAO,GAAGC,eAAa,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,SAAS,GAAG,MAAM,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG;IAChH,YAAY,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC;IACpC;IACA;IACA,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;IACtC,gBAAgB,MAAM;IACtB,aAAa;IACb;IACA;IACA,YAAY,IAAI,CAAC,KAAK,CAAC,EAAE;IACzB,gBAAgB,IAAI,CAAC,KAAK,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAC9C,aAAa;IACb;IACA;IACA;IACA;IACA,YAAY,IAAI,MAAM,KAAK,SAAS,EAAE;IACtC;IACA;IACA,gBAAgB,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,aAAa;IACb,YAAY,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACjC,YAAY,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC9B,YAAY,CAAC,EAAE,CAAC;IAChB,SAAS;IACT,KAAK;IACL,IAAI,OAAO,KAAK,EAAE,EAAE,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;IAC7C,YAAY;IACZ,QAAQ,IAAI;IACZ,YAAY,IAAI,SAAS,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9F,SAAS;IACT,gBAAgB,EAAE,IAAI,GAAG,EAAE,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IAC7C,KAAK;IACL,CAAC,CAAC,CAAC;;ICzFH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAEA,MAAMC,gBAAc,GAAG,IAAI,OAAO,EAAE,CAAC;IACrC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK;IACpD,IAAI,IAAI,EAAE,IAAI,YAAY,QAAQ,CAAC,EAAE;IACrC,QAAQ,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;IACnE,KAAK;IACL,IAAI,IAAI,aAAa,GAAGA,gBAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACjD,IAAI,IAAI,aAAa,KAAK,SAAS,EAAE;IACrC,QAAQ,aAAa,GAAG,IAAI,OAAO,EAAE,CAAC;IACtC,QAAQA,gBAAc,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAChD,KAAK;IACL,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;IACrC;IACA;IACA,IAAI,IAAI,aAAa,YAAY,gBAAgB,EAAE;IACnD,QAAQ,IAAI,KAAK,YAAY,cAAc;IAC3C,YAAY,aAAa,CAAC,QAAQ,KAAK,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE;IAC5E;IACA,YAAY,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACjC,YAAY,OAAO;IACnB,SAAS;IACT,aAAa;IACb;IACA,YAAY,IAAI,cAAc,GAAG,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC3E,YAAY,IAAI,cAAc,KAAK,SAAS,EAAE;IAC9C,gBAAgB,cAAc,GAAG;IACjC,oBAAoB,QAAQ,EAAE,aAAa;IAC3C,oBAAoB,KAAK,EAAE,QAAQ,CAAC,sBAAsB,EAAE;IAC5D,iBAAiB,CAAC;IAClB,gBAAgB,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;IAC1E,aAAa;IACb,YAAY,aAAa,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1F,SAAS;IACT,KAAK;IACL;IACA,IAAI,IAAI,KAAK,YAAY,cAAc,EAAE;IACzC,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC7D,QAAQ,MAAM,cAAc,GAAG,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC3D,QAAQ,IAAI,cAAc,KAAK,SAAS,EAAE;IAC1C;IACA,YAAY,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAChD,YAAY,IAAI,CAAC,MAAM,EAAE,CAAC;IAC1B;IACA,YAAY,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAC;IACjD,SAAS;IACT,KAAK;IACL,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;;IC3EH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IACA;IACA,MAAM,SAAS,CAAC;IAChB,IAAI,WAAW,CAAC,OAAO,EAAE;IACzB,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;IACjC,QAAQ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IAC7B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,QAAQ,MAAM,SAAS,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;IAC7E,QAAQ,KAAK,MAAM,GAAG,IAAI,SAAS,EAAE;IACrC,YAAY,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAClC,SAAS;IACT,KAAK;IACL,IAAI,GAAG,CAAC,GAAG,EAAE;IACb,QAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9B,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAC5B,KAAK;IACL,IAAI,MAAM,CAAC,GAAG,EAAE;IAChB,QAAQ,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACjC,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAC5B,KAAK;IACL,IAAI,MAAM,GAAG;IACb,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;IAC1B,YAAY,IAAI,WAAW,GAAG,EAAE,CAAC;IACjC,YAAY,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,WAAW,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;IACpE,YAAY,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAC5D,SAAS;IACT,KAAK;IACL,CAAC;IACD;IACA;IACA;IACA;IACA,MAAM,oBAAoB,GAAG,IAAI,OAAO,EAAE,CAAC;IAC3C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,SAAS,KAAK,CAAC,IAAI,KAAK;IAC3D,IAAI,IAAI,EAAE,IAAI,YAAY,aAAa,CAAC,KAAK,IAAI,YAAY,YAAY,CAAC;IAC1E,QAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;IAC5E,QAAQ,MAAM,IAAI,KAAK,CAAC,iEAAiE;IACzF,YAAY,6CAA6C,CAAC,CAAC;IAC3D,KAAK;IACL,IAAI,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;IAC/B,IAAI,MAAM,EAAE,OAAO,EAAE,GAAG,SAAS,CAAC;IAClC,IAAI,IAAI,eAAe,GAAG,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACzD,IAAI,IAAI,eAAe,KAAK,SAAS,EAAE;IACvC;IACA;IACA,QAAQ,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACnE,QAAQ,oBAAoB,CAAC,GAAG,CAAC,IAAI,EAAE,eAAe,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;IACpE,KAAK;IACL,IAAI,MAAM,SAAS,IAAI,OAAO,CAAC,SAAS,IAAI,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IACpE;IACA;IACA;IACA,IAAI,eAAe,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;IACtC,QAAQ,IAAI,EAAE,IAAI,IAAI,SAAS,CAAC,EAAE;IAClC,YAAY,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACnC,YAAY,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACzC,SAAS;IACT,KAAK,CAAC,CAAC;IACP;IACA,IAAI,KAAK,MAAM,IAAI,IAAI,SAAS,EAAE;IAClC,QAAQ,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;IACtC,QAAQ,IAAI,KAAK,IAAI,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;IAChD;IACA;IACA,YAAY,IAAI,KAAK,EAAE;IACvB,gBAAgB,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpC,gBAAgB,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,aAAa;IACb,iBAAiB;IACjB,gBAAgB,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACvC,gBAAgB,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7C,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,IAAI,OAAO,SAAS,CAAC,MAAM,KAAK,UAAU,EAAE;IAChD,QAAQ,SAAS,CAAC,MAAM,EAAE,CAAC;IAC3B,KAAK;IACL,CAAC,CAAC,CAAC;;ICnGH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IACA,MAAM,cAAc,GAAG,IAAI,OAAO,EAAE,CAAC;IACrC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK;IACvD,IAAI,MAAM,aAAa,GAAG,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnD,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;IAC9B;IACA,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC;IACxC,YAAY,aAAa,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM;IACjD,YAAY,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;IAC3D,YAAY,OAAO;IACnB,SAAS;IACT,KAAK;IACL,SAAS,IAAI,aAAa,KAAK,KAAK;IACpC,SAAS,KAAK,KAAK,SAAS,IAAI,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;IAC3D;IACA,QAAQ,OAAO;IACf,KAAK;IACL,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACvB;IACA;IACA,IAAI,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;;ICnEH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IACA,MAAMC,gBAAc,GAAG,IAAI,OAAO,EAAE,CAAC;IACrC;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,SAAS,GAAG,SAAS,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK;IACxD,IAAI,MAAM,aAAa,GAAGA,gBAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnD,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI,YAAY,aAAa,EAAE;IAC9D;IACA;IACA,QAAQ,IAAI,aAAa,KAAK,SAAS,IAAI,CAACA,gBAAc,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;IACtE,YAAY,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;IAC7C,YAAY,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACzD,SAAS;IACT,KAAK;IACL,SAAS,IAAI,KAAK,KAAK,aAAa,EAAE;IACtC,QAAQ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC7B,KAAK;IACL,IAAIA,gBAAc,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;;ICnCH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IACA;IACA;IACA,MAAM,mBAAmB,GAAG,CAAC,aAAa,EAAE,UAAU,KAAK;IAC3D,IAAI,MAAM,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC;IACzD,IAAI,MAAM,UAAU,GAAG,UAAU,KAAK,SAAS,GAAG,aAAa,CAAC,OAAO;IACvE,QAAQ,UAAU,CAAC,SAAS,CAAC;IAC7B,IAAI,MAAM,SAAS,GAAG,SAAS,CAAC,YAAY,CAAC,YAAY,EAAE,EAAE,UAAU,CAAC,CAAC;IACzE,IAAI,SAAS,CAAC,YAAY,CAAC,YAAY,EAAE,EAAE,UAAU,CAAC,CAAC;IACvD,IAAI,MAAM,OAAO,GAAG,IAAI,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACxD,IAAI,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IACvC,IAAI,OAAO,OAAO,CAAC;IACnB,CAAC,CAAC;IACF,MAAM,UAAU,GAAG,CAAC,IAAI,EAAE,KAAK,KAAK;IACpC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACzB,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,IAAI,OAAO,IAAI,CAAC;IAChB,CAAC,CAAC;IACF,MAAM,gBAAgB,GAAG,CAAC,aAAa,EAAE,IAAI,EAAE,GAAG,KAAK;IACvD,IAAI,MAAM,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC;IACzD,IAAI,MAAM,UAAU,GAAG,GAAG,GAAG,GAAG,CAAC,SAAS,GAAG,aAAa,CAAC,OAAO,CAAC;IACnE,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;IAC7C,IAAI,IAAI,OAAO,KAAK,UAAU,EAAE;IAChC,QAAQ,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;IACtE,KAAK;IACL,CAAC,CAAC;IACF,MAAM,UAAU,GAAG,CAAC,IAAI,KAAK;IAC7B,IAAI,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IACrF,CAAC,CAAC;IACF;IACA;IACA;IACA,MAAM,WAAW,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,KAAK;IAC1C,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;IAC1B,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE;IACvC,QAAQ,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5B,KAAK;IACL,IAAI,OAAO,GAAG,CAAC;IACf,CAAC,CAAC;IACF;IACA,MAAM,aAAa,GAAG,IAAI,OAAO,EAAE,CAAC;IACpC,MAAM,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;IACnC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,MAAM,GAAG,SAAS,CAAC,CAAC,KAAK,EAAE,eAAe,EAAE,QAAQ,KAAK;IACtE,IAAI,IAAI,KAAK,CAAC;IACd,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;IAChC,QAAQ,QAAQ,GAAG,eAAe,CAAC;IACnC,KAAK;IACL,SAAS,IAAI,eAAe,KAAK,SAAS,EAAE;IAC5C,QAAQ,KAAK,GAAG,eAAe,CAAC;IAChC,KAAK;IACL,IAAI,OAAO,CAAC,aAAa,KAAK;IAC9B,QAAQ,IAAI,EAAE,aAAa,YAAY,QAAQ,CAAC,EAAE;IAClD,YAAY,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;IACxE,SAAS;IACT;IACA;IACA,QAAQ,MAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAChE,QAAQ,MAAM,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC9D;IACA;IACA;IACA,QAAQ,MAAM,QAAQ,GAAG,EAAE,CAAC;IAC5B;IACA;IACA,QAAQ,MAAM,SAAS,GAAG,EAAE,CAAC;IAC7B,QAAQ,MAAM,OAAO,GAAG,EAAE,CAAC;IAC3B,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC;IACtB,QAAQ,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;IAClC,YAAY,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;IAChE,YAAY,SAAS,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACrD,YAAY,KAAK,EAAE,CAAC;IACpB,SAAS;IACT;IACA;IACA;IACA;IACA,QAAQ,IAAI,gBAAgB,CAAC;IAC7B,QAAQ,IAAI,gBAAgB,CAAC;IAC7B;IACA,QAAQ,IAAI,OAAO,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1C,QAAQ,IAAI,OAAO,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,OAAO,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;IAC3C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,OAAO,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,EAAE;IACzD,YAAY,IAAI,QAAQ,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;IAC5C;IACA;IACA,gBAAgB,OAAO,EAAE,CAAC;IAC1B,aAAa;IACb,iBAAiB,IAAI,QAAQ,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;IACjD;IACA;IACA,gBAAgB,OAAO,EAAE,CAAC;IAC1B,aAAa;IACb,iBAAiB,IAAI,OAAO,CAAC,OAAO,CAAC,KAAK,OAAO,CAAC,OAAO,CAAC,EAAE;IAC5D;IACA,gBAAgB,QAAQ,CAAC,OAAO,CAAC;IACjC,oBAAoB,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IACtE,gBAAgB,OAAO,EAAE,CAAC;IAC1B,gBAAgB,OAAO,EAAE,CAAC;IAC1B,aAAa;IACb,iBAAiB,IAAI,OAAO,CAAC,OAAO,CAAC,KAAK,O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"}